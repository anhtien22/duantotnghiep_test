{"ast":null,"code":"var _jsxFileName = \"D:\\\\D\\u1EF1 \\xC1n T\\u1ED1t Nghi\\u1EC7p\\\\duantotnghiep_test\\\\frontend\\\\src\\\\context\\\\orders\\\\OrderState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport OrderContext from \"./orderContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useCart } from \"react-use-cart\"; // Function for cleaning null, undefined and empty strings values in objects\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction clean(obj) {\n  for (var propName in obj) {\n    if (obj[propName] === null || obj[propName] === undefined || obj[propName] === \"\") {\n      delete obj[propName];\n    }\n  }\n\n  return obj;\n} // ------------------------------------------\n// Orders State\n// ------------------------------------------\n\n\nconst OdersState = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    emptyCart\n  } = useCart();\n  const [orders, setOrders] = useState([]);\n  const [ordersError, setOrdersError] = useState(null);\n  const [ordersLoading, setOrdersLoading] = useState(false);\n  const [ordersMessage, setOrdersMessage] = useState(null);\n  const [myOrders, setMyOrders] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setOrdersError(null);\n      setOrdersMessage(null);\n    }, 3000);\n  }, [ordersError, ordersMessage]); // Error Handler function\n\n  const errorHandler = (err, info) => {\n    if (err.response) {\n      setOrdersError({\n        variant: \"danger\",\n        message: `${info}, ${err.response.data.error}`\n      });\n    } else if (err.request) {\n      setOrdersError({\n        variant: \"danger\",\n        message: `${info},  Không có phản hồi từ máy chủ!`\n      });\n    } else {\n      setOrdersError({\n        variant: \"danger\",\n        message: err.message\n      });\n    }\n\n    setOrdersLoading(false);\n  }; // -----------------------------------------\n  // Place new order\n  //   ---------------------------------------\n\n\n  const placeOrder = async (orderItems, shippingAddress, paymentMethod, totalPrice, paymentResult) => {\n    const orderBody = clean({\n      orderItems,\n      shippingAddress,\n      paymentMethod,\n      totalPrice,\n      paymentResult\n    });\n\n    try {\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      setOrdersLoading(true);\n      await axios.post(\"api/orders/new\", orderBody, {\n        headers\n      }); // localStorage.removeItem('react-use-cart')\n\n      emptyCart();\n      navigate(\"/thankYou\"); // setProducts([...products, productBody])\n\n      setOrdersMessage({\n        variant: \"success\",\n        message: \"Đặt hàng thành công!\"\n      });\n      setOrdersLoading(false);\n      setOrdersError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // -----------------------------------------\n  //  Get all orders\n  //   ---------------------------------------\n\n\n  const getAllOrders = async () => {\n    try {\n      setOrdersLoading(true);\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      const {\n        data\n      } = await axios.get(\"/api/orders/getAll\", {\n        headers\n      });\n      setOrders(data.orders);\n      setOrdersLoading(false);\n      setOrdersError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // -----------------------------------------\n  //  Get my orders\n  //   ---------------------------------------\n\n\n  const getMyOrders = async () => {\n    try {\n      setOrdersLoading(true);\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      const {\n        data\n      } = await axios.get(\"/api/orders/myOrders\", {\n        headers\n      });\n      setMyOrders(data.myOrders);\n      setOrdersLoading(false);\n      setOrdersError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // -----------------------------------------\n  //  Get One order\n  //   ---------------------------------------\n\n\n  const getOneOrder = async id => {\n    try {\n      setOrdersLoading(true);\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      const {\n        data\n      } = await axios.get(`/api/orders/myOrders/${id}`, {\n        headers\n      });\n      setOrdersLoading(false);\n      setOrdersError(null);\n      return data.order;\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // -----------------------------------------\n  //  Get One order admin\n  //   ---------------------------------------\n\n\n  const getOneOrderAdmin = async id => {\n    try {\n      setOrdersLoading(true);\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      const {\n        data\n      } = await axios.get(`/api/orders/${id}`, {\n        headers\n      });\n      setOrdersLoading(false);\n      setOrdersError(null);\n      return data.order;\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  const updateStatustAdmin = async (e, id) => {\n    const selectHend = e.target.value;\n    console.log(selectHend);\n    const select = e.target.closest(\"td\").querySelectorAll('[name=\"orderStatus\"] option');\n    const indexSatus = [...select].findIndex(val => val.value === selectHend);\n\n    for (let index = 0; index < select.length; index++) {\n      if (index < indexSatus) select[index].remove();\n    }\n\n    try {\n      setOrdersLoading(true);\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`,\n        \"Content-Type\": \"application/json\"\n      };\n      const res = await fetch(`/api/orders/admin/order/${id}`, {\n        method: \"PUT\",\n        headers,\n        body: JSON.stringify({\n          id,\n          status: selectHend\n        })\n      });\n      console.log(res);\n      setOrdersLoading(false);\n      setOrdersError(null);\n      console.log(\"response\", res);\n      return res.json();\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: {\n      placeOrder,\n      orders,\n      ordersError,\n      ordersLoading,\n      ordersMessage,\n      myOrders,\n      getAllOrders,\n      getMyOrders,\n      getOneOrder,\n      getOneOrderAdmin,\n      updateStatustAdmin\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OdersState, \"xI3ivZJNcwSND6AjU9SPaE3M3ZI=\", false, function () {\n  return [useNavigate, useCart];\n});\n\n_c = OdersState;\nexport default OdersState;\n\nvar _c;\n\n$RefreshReg$(_c, \"OdersState\");","map":{"version":3,"sources":["D:/Dự Án Tốt Nghiệp/duantotnghiep_test/frontend/src/context/orders/OrderState.js"],"names":["React","useEffect","useState","OrderContext","axios","useNavigate","useCart","clean","obj","propName","undefined","OdersState","props","navigate","emptyCart","orders","setOrders","ordersError","setOrdersError","ordersLoading","setOrdersLoading","ordersMessage","setOrdersMessage","myOrders","setMyOrders","setTimeout","errorHandler","err","info","response","variant","message","data","error","request","placeOrder","orderItems","shippingAddress","paymentMethod","totalPrice","paymentResult","orderBody","userToken","JSON","parse","localStorage","getItem","headers","Authorization","post","getAllOrders","get","getMyOrders","getOneOrder","id","order","getOneOrderAdmin","updateStatustAdmin","e","selectHend","target","value","console","log","select","closest","querySelectorAll","indexSatus","findIndex","val","index","length","remove","res","fetch","method","body","stringify","status","json","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,gBAAxB,C,CAEA;;;;AACA,SAASC,KAAT,CAAeC,GAAf,EAAoB;AAClB,OAAK,IAAIC,QAAT,IAAqBD,GAArB,EAA0B;AACxB,QACEA,GAAG,CAACC,QAAD,CAAH,KAAkB,IAAlB,IACAD,GAAG,CAACC,QAAD,CAAH,KAAkBC,SADlB,IAEAF,GAAG,CAACC,QAAD,CAAH,KAAkB,EAHpB,EAIE;AACA,aAAOD,GAAG,CAACC,QAAD,CAAV;AACD;AACF;;AACD,SAAOD,GAAP;AACD,C,CAED;AACA;AACA;;;AACA,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAgBR,OAAO,EAA7B;AAEA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,UAAU,CAAC,MAAM;AACfP,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAI,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GALQ,EAKN,CAACL,WAAD,EAAcI,aAAd,CALM,CAAT,CAX4B,CAkB5B;;AACA,QAAMK,YAAY,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAClC,QAAID,GAAG,CAACE,QAAR,EAAkB;AAChBX,MAAAA,cAAc,CAAC;AACbY,QAAAA,OAAO,EAAE,QADI;AAEbC,QAAAA,OAAO,EAAG,GAAEH,IAAK,KAAID,GAAG,CAACE,QAAJ,CAAaG,IAAb,CAAkBC,KAAM;AAFhC,OAAD,CAAd;AAID,KALD,MAKO,IAAIN,GAAG,CAACO,OAAR,EAAiB;AACtBhB,MAAAA,cAAc,CAAC;AACbY,QAAAA,OAAO,EAAE,QADI;AAEbC,QAAAA,OAAO,EAAG,GAAEH,IAAK;AAFJ,OAAD,CAAd;AAID,KALM,MAKA;AACLV,MAAAA,cAAc,CAAC;AAAEY,QAAAA,OAAO,EAAE,QAAX;AAAqBC,QAAAA,OAAO,EAAEJ,GAAG,CAACI;AAAlC,OAAD,CAAd;AACD;;AACDX,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAfD,CAnB4B,CAoC5B;AACA;AACA;;;AACA,QAAMe,UAAU,GAAG,OACjBC,UADiB,EAEjBC,eAFiB,EAGjBC,aAHiB,EAIjBC,UAJiB,EAKjBC,aALiB,KAMd;AACH,UAAMC,SAAS,GAAGlC,KAAK,CAAC;AACtB6B,MAAAA,UADsB;AAEtBC,MAAAA,eAFsB;AAGtBC,MAAAA,aAHsB;AAItBC,MAAAA,UAJsB;AAKtBC,MAAAA;AALsB,KAAD,CAAvB;;AAOA,QAAI;AACF,YAAME,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlB;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,aAAa,EAAG,UAASN,SAAS,IAAIA,SAAU;AADlC,OAAhB;AAGAtB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,YAAMhB,KAAK,CAAC6C,IAAN,CAAW,gBAAX,EAA6BR,SAA7B,EAAwC;AAAEM,QAAAA;AAAF,OAAxC,CAAN,CANE,CAOF;;AACAjC,MAAAA,SAAS;AACTD,MAAAA,QAAQ,CAAC,WAAD,CAAR,CATE,CAUF;;AACAS,MAAAA,gBAAgB,CAAC;AACfQ,QAAAA,OAAO,EAAE,SADM;AAEfC,QAAAA,OAAO,EAAE;AAFM,OAAD,CAAhB;AAIAX,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAjBD,CAiBE,OAAOS,GAAP,EAAY;AACZD,MAAAA,YAAY,CAACC,GAAD,CAAZ;AACD;AACF,GAlCD,CAvC4B,CA2E5B;AACA;AACA;;;AACA,QAAMuB,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF9B,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,YAAMsB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlB;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,aAAa,EAAG,UAASN,SAAS,IAAIA,SAAU;AADlC,OAAhB;AAGA,YAAM;AAAEV,QAAAA;AAAF,UAAW,MAAM5B,KAAK,CAAC+C,GAAN,CAAU,oBAAV,EAAgC;AAAEJ,QAAAA;AAAF,OAAhC,CAAvB;AACA/B,MAAAA,SAAS,CAACgB,IAAI,CAACjB,MAAN,CAAT;AACAK,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAVD,CAUE,OAAOS,GAAP,EAAY;AACZD,MAAAA,YAAY,CAACC,GAAD,CAAZ;AACD;AACF,GAdD,CA9E4B,CA8F5B;AACA;AACA;;;AACA,QAAMyB,WAAW,GAAG,YAAY;AAC9B,QAAI;AACFhC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,YAAMsB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlB;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,aAAa,EAAG,UAASN,SAAS,IAAIA,SAAU;AADlC,OAAhB;AAGA,YAAM;AAAEV,QAAAA;AAAF,UAAW,MAAM5B,KAAK,CAAC+C,GAAN,CAAU,sBAAV,EAAkC;AAAEJ,QAAAA;AAAF,OAAlC,CAAvB;AACAvB,MAAAA,WAAW,CAACQ,IAAI,CAACT,QAAN,CAAX;AACAH,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAVD,CAUE,OAAOS,GAAP,EAAY;AACZD,MAAAA,YAAY,CAACC,GAAD,CAAZ;AACD;AACF,GAdD,CAjG4B,CAiH5B;AACA;AACA;;;AACA,QAAM0B,WAAW,GAAG,MAAOC,EAAP,IAAc;AAChC,QAAI;AACFlC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,YAAMsB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlB;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,aAAa,EAAG,UAASN,SAAS,IAAIA,SAAU;AADlC,OAAhB;AAGA,YAAM;AAAEV,QAAAA;AAAF,UAAW,MAAM5B,KAAK,CAAC+C,GAAN,CAAW,wBAAuBG,EAAG,EAArC,EAAwC;AAC7DP,QAAAA;AAD6D,OAAxC,CAAvB;AAGA3B,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,aAAOc,IAAI,CAACuB,KAAZ;AACD,KAZD,CAYE,OAAO5B,GAAP,EAAY;AACZD,MAAAA,YAAY,CAACC,GAAD,CAAZ;AACD;AACF,GAhBD,CApH4B,CAsI5B;AACA;AACA;;;AACA,QAAM6B,gBAAgB,GAAG,MAAOF,EAAP,IAAc;AACrC,QAAI;AACFlC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,YAAMsB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlB;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,aAAa,EAAG,UAASN,SAAS,IAAIA,SAAU;AADlC,OAAhB;AAGA,YAAM;AAAEV,QAAAA;AAAF,UAAW,MAAM5B,KAAK,CAAC+C,GAAN,CAAW,eAAcG,EAAG,EAA5B,EAA+B;AACpDP,QAAAA;AADoD,OAA/B,CAAvB;AAGA3B,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,aAAOc,IAAI,CAACuB,KAAZ;AACD,KAZD,CAYE,OAAO5B,GAAP,EAAY;AACZD,MAAAA,YAAY,CAACC,GAAD,CAAZ;AACD;AACF,GAhBD;;AAkBA,QAAM8B,kBAAkB,GAAG,OAAOC,CAAP,EAAUJ,EAAV,KAAiB;AAC1C,UAAMK,UAAU,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACA,UAAMK,MAAM,GAAGN,CAAC,CAACE,MAAF,CACZK,OADY,CACJ,IADI,EAEZC,gBAFY,CAEK,6BAFL,CAAf;AAGA,UAAMC,UAAU,GAAG,CAAC,GAAGH,MAAJ,EAAYI,SAAZ,CAAuBC,GAAD,IAASA,GAAG,CAACR,KAAJ,KAAcF,UAA7C,CAAnB;;AACA,SAAK,IAAIW,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,MAAM,CAACO,MAAnC,EAA2CD,KAAK,EAAhD,EAAoD;AAClD,UAAIA,KAAK,GAAGH,UAAZ,EAAwBH,MAAM,CAACM,KAAD,CAAN,CAAcE,MAAd;AACzB;;AACD,QAAI;AACFpD,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,YAAMsB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlB;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,aAAa,EAAG,UAASN,SAAS,IAAIA,SAAU,EADlC;AAEd,wBAAgB;AAFF,OAAhB;AAIA,YAAM+B,GAAG,GAAG,MAAMC,KAAK,CAAE,2BAA0BpB,EAAG,EAA/B,EAAkC;AACvDqB,QAAAA,MAAM,EAAE,KAD+C;AAEvD5B,QAAAA,OAFuD;AAGvD6B,QAAAA,IAAI,EAAEjC,IAAI,CAACkC,SAAL,CAAe;AAAEvB,UAAAA,EAAF;AAAMwB,UAAAA,MAAM,EAAEnB;AAAd,SAAf;AAHiD,OAAlC,CAAvB;AAKAG,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AAEArD,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA4C,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBU,GAAxB;AACA,aAAOA,GAAG,CAACM,IAAJ,EAAP;AACD,KAlBD,CAkBE,OAAOpD,GAAP,EAAY;AACZD,MAAAA,YAAY,CAACC,GAAD,CAAZ;AACD;AACF,GA/BD;;AAiCA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAG;AACNQ,MAAAA,UADM;AAENpB,MAAAA,MAFM;AAGNE,MAAAA,WAHM;AAINE,MAAAA,aAJM;AAKNE,MAAAA,aALM;AAMNE,MAAAA,QANM;AAON2B,MAAAA,YAPM;AAQNE,MAAAA,WARM;AASNC,MAAAA,WATM;AAUNG,MAAAA,gBAVM;AAWNC,MAAAA;AAXM,KADV;AAAA,cAeI7C,KAAK,CAACoE;AAfV;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA/MD;;GAAMrE,U;UACaN,W,EAEKC,O;;;KAHlBK,U;AAiNN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport OrderContext from \"./orderContext\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCart } from \"react-use-cart\";\r\n\r\n// Function for cleaning null, undefined and empty strings values in objects\r\nfunction clean(obj) {\r\n  for (var propName in obj) {\r\n    if (\r\n      obj[propName] === null ||\r\n      obj[propName] === undefined ||\r\n      obj[propName] === \"\"\r\n    ) {\r\n      delete obj[propName];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\n// ------------------------------------------\r\n// Orders State\r\n// ------------------------------------------\r\nconst OdersState = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const { emptyCart } = useCart();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [ordersError, setOrdersError] = useState(null);\r\n  const [ordersLoading, setOrdersLoading] = useState(false);\r\n  const [ordersMessage, setOrdersMessage] = useState(null);\r\n  const [myOrders, setMyOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setOrdersError(null);\r\n      setOrdersMessage(null);\r\n    }, 3000);\r\n  }, [ordersError, ordersMessage]);\r\n\r\n  // Error Handler function\r\n  const errorHandler = (err, info) => {\r\n    if (err.response) {\r\n      setOrdersError({\r\n        variant: \"danger\",\r\n        message: `${info}, ${err.response.data.error}`,\r\n      });\r\n    } else if (err.request) {\r\n      setOrdersError({\r\n        variant: \"danger\",\r\n        message: `${info},  Không có phản hồi từ máy chủ!`,\r\n      });\r\n    } else {\r\n      setOrdersError({ variant: \"danger\", message: err.message });\r\n    }\r\n    setOrdersLoading(false);\r\n  };\r\n\r\n  // -----------------------------------------\r\n  // Place new order\r\n  //   ---------------------------------------\r\n  const placeOrder = async (\r\n    orderItems,\r\n    shippingAddress,\r\n    paymentMethod,\r\n    totalPrice,\r\n    paymentResult\r\n  ) => {\r\n    const orderBody = clean({\r\n      orderItems,\r\n      shippingAddress,\r\n      paymentMethod,\r\n      totalPrice,\r\n      paymentResult,\r\n    });\r\n    try {\r\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      };\r\n      setOrdersLoading(true);\r\n      await axios.post(\"api/orders/new\", orderBody, { headers });\r\n      // localStorage.removeItem('react-use-cart')\r\n      emptyCart();\r\n      navigate(\"/thankYou\");\r\n      // setProducts([...products, productBody])\r\n      setOrdersMessage({\r\n        variant: \"success\",\r\n        message: \"Đặt hàng thành công!\",\r\n      });\r\n      setOrdersLoading(false);\r\n      setOrdersError(null);\r\n    } catch (err) {\r\n      errorHandler(err);\r\n    }\r\n  };\r\n\r\n  // -----------------------------------------\r\n  //  Get all orders\r\n  //   ---------------------------------------\r\n  const getAllOrders = async () => {\r\n    try {\r\n      setOrdersLoading(true);\r\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      };\r\n      const { data } = await axios.get(\"/api/orders/getAll\", { headers });\r\n      setOrders(data.orders);\r\n      setOrdersLoading(false);\r\n      setOrdersError(null);\r\n    } catch (err) {\r\n      errorHandler(err);\r\n    }\r\n  };\r\n\r\n  // -----------------------------------------\r\n  //  Get my orders\r\n  //   ---------------------------------------\r\n  const getMyOrders = async () => {\r\n    try {\r\n      setOrdersLoading(true);\r\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      };\r\n      const { data } = await axios.get(\"/api/orders/myOrders\", { headers });\r\n      setMyOrders(data.myOrders);\r\n      setOrdersLoading(false);\r\n      setOrdersError(null);\r\n    } catch (err) {\r\n      errorHandler(err);\r\n    }\r\n  };\r\n\r\n  // -----------------------------------------\r\n  //  Get One order\r\n  //   ---------------------------------------\r\n  const getOneOrder = async (id) => {\r\n    try {\r\n      setOrdersLoading(true);\r\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      };\r\n      const { data } = await axios.get(`/api/orders/myOrders/${id}`, {\r\n        headers,\r\n      });\r\n      setOrdersLoading(false);\r\n      setOrdersError(null);\r\n      return data.order;\r\n    } catch (err) {\r\n      errorHandler(err);\r\n    }\r\n  };\r\n\r\n  // -----------------------------------------\r\n  //  Get One order admin\r\n  //   ---------------------------------------\r\n  const getOneOrderAdmin = async (id) => {\r\n    try {\r\n      setOrdersLoading(true);\r\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      };\r\n      const { data } = await axios.get(`/api/orders/${id}`, {\r\n        headers,\r\n      });\r\n      setOrdersLoading(false);\r\n      setOrdersError(null);\r\n      return data.order;\r\n    } catch (err) {\r\n      errorHandler(err);\r\n    }\r\n  };\r\n\r\n  const updateStatustAdmin = async (e, id) => {\r\n    const selectHend = e.target.value;\r\n    console.log(selectHend);\r\n    const select = e.target\r\n      .closest(\"td\")\r\n      .querySelectorAll('[name=\"orderStatus\"] option');\r\n    const indexSatus = [...select].findIndex((val) => val.value === selectHend);\r\n    for (let index = 0; index < select.length; index++) {\r\n      if (index < indexSatus) select[index].remove();\r\n    }\r\n    try {\r\n      setOrdersLoading(true);\r\n      const userToken = JSON.parse(localStorage.getItem(\"userToken\"));\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n      const res = await fetch(`/api/orders/admin/order/${id}`, {\r\n        method: \"PUT\",\r\n        headers,\r\n        body: JSON.stringify({ id, status: selectHend }),\r\n      });\r\n      console.log(res);\r\n\r\n      setOrdersLoading(false);\r\n      setOrdersError(null);\r\n      console.log(\"response\", res);\r\n      return res.json();\r\n    } catch (err) {\r\n      errorHandler(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <OrderContext.Provider\r\n      value={ {\r\n        placeOrder,\r\n        orders,\r\n        ordersError,\r\n        ordersLoading,\r\n        ordersMessage,\r\n        myOrders,\r\n        getAllOrders,\r\n        getMyOrders,\r\n        getOneOrder,\r\n        getOneOrderAdmin,\r\n        updateStatustAdmin,\r\n      } }\r\n    >\r\n      { props.children }\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OdersState;\r\n"]},"metadata":{},"sourceType":"module"}