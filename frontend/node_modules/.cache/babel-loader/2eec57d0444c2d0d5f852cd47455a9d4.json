{"ast":null,"code":"var _jsxFileName = \"D:\\\\D\\u1EF1 \\xC1n T\\u1ED1t Nghi\\u1EC7p\\\\duantotnghiep_test\\\\frontend\\\\src\\\\context\\\\variation\\\\VariationState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport VariationContext from './variationContext';\nimport axios from 'axios'; // Function for cleaning null, undefined and empty strings values in objects\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction clean(obj) {\n  for (var propName in obj) {\n    if (obj[propName] === null || obj[propName] === undefined || obj[propName] === '') {\n      delete obj[propName];\n    }\n  }\n\n  return obj;\n} // ------------------------------------------\n// Category State\n// ------------------------------------------\n\n\nconst VariationState = props => {\n  _s();\n\n  const [variation, setVariation] = useState([]);\n  const [variationsError, setVariationsError] = useState(null);\n  const [variationsLoading, setVariationsLoading] = useState(false);\n  const [variationsMessage, setVariationsMessage] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      setVariationsError(null);\n      setVariationsMessage(null);\n    }, 3000);\n  }, [variationsError, variationsMessage]); // Error Handler function\n\n  const errorHandler = (err, info) => {\n    if (err.response) {\n      setVariationsError({\n        variant: 'danger',\n        message: `${info}, ${err.response.data.error}`\n      });\n    } else if (err.request) {\n      setVariationsError({\n        variant: 'danger',\n        message: `${info},  No response from server!`\n      });\n    } else {\n      setVariationsError({\n        variant: 'danger',\n        message: err.message\n      });\n    }\n\n    setVariationsLoading(false);\n  }; // Add new variation\n\n\n  const addVariation = async title => {\n    const variationBody = clean({\n      title\n    });\n\n    try {\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      setVariationsLoading(true);\n      await axios.post('api/variation/add', variationBody, {\n        headers\n      });\n      setVariation([...variation, variationBody]);\n      setVariationsMessage({\n        variant: 'success',\n        message: 'variation added successfully!'\n      });\n      setVariationsLoading(false);\n      setVariationsError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // get all variation\n\n\n  const getVariations = async () => {\n    try {\n      setVariationsLoading(true);\n      const {\n        data\n      } = await axios.get('api/variation/getAll');\n      setVariation(data.variation);\n      setVariationsLoading(false);\n      setVariationsError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // get one variation\n\n\n  const getOneVariation = async id => {\n    try {\n      const {\n        data\n      } = await axios.get(`/api/variation/${id}`);\n      return data.variation;\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  const updateVariation = async (id, title) => {\n    try {\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      setVariationsLoading(true);\n      await axios.patch(`api/variation/${id}`, {\n        title\n      }, {\n        headers\n      });\n      getVariations();\n      setVariationsMessage({\n        variant: 'info',\n        message: 'Category updated!'\n      });\n      setVariationsLoading(false);\n      setVariationsError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(VariationContext.Provider, {\n    value: {\n      variation,\n      variationsError,\n      variationsLoading,\n      variationsMessage,\n      getVariations,\n      addVariation,\n      getOneVariation,\n      updateVariation\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VariationState, \"f9D9i3d8gPzFKy5d+9qtoJLG+v8=\");\n\n_c = VariationState;\nexport default VariationState;\n\nvar _c;\n\n$RefreshReg$(_c, \"VariationState\");","map":{"version":3,"sources":["D:/Dự Án Tốt Nghiệp/duantotnghiep_test/frontend/src/context/variation/VariationState.js"],"names":["React","useEffect","useState","VariationContext","axios","clean","obj","propName","undefined","VariationState","props","variation","setVariation","variationsError","setVariationsError","variationsLoading","setVariationsLoading","variationsMessage","setVariationsMessage","setTimeout","errorHandler","err","info","response","variant","message","data","error","request","addVariation","title","variationBody","userToken","JSON","parse","localStorage","getItem","headers","Authorization","post","getVariations","get","getOneVariation","id","updateVariation","patch","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport VariationContext from './variationContext'\r\nimport axios from 'axios'\r\n\r\n// Function for cleaning null, undefined and empty strings values in objects\r\nfunction clean(obj) {\r\n  for (var propName in obj) {\r\n    if (\r\n      obj[propName] === null ||\r\n      obj[propName] === undefined ||\r\n      obj[propName] === ''\r\n    ) {\r\n      delete obj[propName]\r\n    }\r\n  }\r\n  return obj\r\n}\r\n\r\n// ------------------------------------------\r\n// Category State\r\n// ------------------------------------------\r\nconst VariationState = props => {\r\n  const [variation, setVariation] = useState([])\r\n  const [variationsError, setVariationsError] = useState(null)\r\n  const [variationsLoading, setVariationsLoading] = useState(false)\r\n  const [variationsMessage, setVariationsMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setVariationsError(null)\r\n      setVariationsMessage(null)\r\n    }, 3000)\r\n  }, [variationsError, variationsMessage])\r\n\r\n  // Error Handler function\r\n  const errorHandler = (err, info) => {\r\n    if (err.response) {\r\n      setVariationsError({\r\n        variant: 'danger',\r\n        message: `${info}, ${err.response.data.error}`,\r\n      })\r\n    } else if (err.request) {\r\n      setVariationsError({\r\n        variant: 'danger',\r\n        message: `${info},  No response from server!`,\r\n      })\r\n    } else {\r\n      setVariationsError({ variant: 'danger', message: err.message })\r\n    }\r\n    setVariationsLoading(false)\r\n  }\r\n\r\n  // Add new variation\r\n  const addVariation = async title => {\r\n    const variationBody = clean({ title })\r\n    try {\r\n      const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      }\r\n      setVariationsLoading(true)\r\n      await axios.post('api/variation/add', variationBody, { headers })\r\n      setVariation([...variation, variationBody])\r\n      setVariationsMessage({\r\n        variant: 'success',\r\n        message: 'variation added successfully!',\r\n      })\r\n      setVariationsLoading(false)\r\n      setVariationsError(null)\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  // get all variation\r\n  const getVariations = async () => {\r\n    try {\r\n      setVariationsLoading(true)\r\n      const { data } = await axios.get('api/variation/getAll')\r\n      setVariation(data.variation)\r\n      setVariationsLoading(false)\r\n      setVariationsError(null)\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  // get one variation\r\n  const getOneVariation = async id => {\r\n    try {\r\n      const { data } = await axios.get(`/api/variation/${id}`)\r\n      return data.variation\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  const updateVariation = async (id, title) => {\r\n    try {\r\n      const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      }\r\n      setVariationsLoading(true)\r\n      await axios.patch(`api/variation/${id}`, { title }, { headers })\r\n      getVariations()\r\n      setVariationsMessage({\r\n        variant: 'info',\r\n        message: 'Category updated!',\r\n      })\r\n      setVariationsLoading(false)\r\n      setVariationsError(null)\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <VariationContext.Provider\r\n      value={ {\r\n        variation,\r\n        variationsError,\r\n        variationsLoading,\r\n        variationsMessage,\r\n        getVariations,\r\n        addVariation,\r\n        getOneVariation,\r\n        updateVariation,\r\n      } }>\r\n      { props.children }\r\n    </VariationContext.Provider>\r\n  )\r\n}\r\n\r\nexport default VariationState\r\n"]},"metadata":{},"sourceType":"module"}