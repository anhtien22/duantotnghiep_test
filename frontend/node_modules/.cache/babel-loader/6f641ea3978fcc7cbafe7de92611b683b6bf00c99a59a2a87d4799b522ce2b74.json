{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar DEFAULT_NUMBER = 1111111.1111111;\nvar MAX_DECIMAL = 0.31111111111111117;\nvar MIN_DECIMAL = 1;\nvar ONE_NUMBER = 1;\nvar ZERO_NUMBER = 0;\nvar DIGITS_REGEX = /\\d/;\nvar MAX_PRECISION = 15;\n/**\n * @hidden\n */\nexport var getInitialState = function getInitialState() {\n  return {\n    eventValue: null,\n    prevLooseValue: '',\n    currentLooseValue: '',\n    focused: false,\n    selectionStart: undefined,\n    selectionEnd: undefined,\n    decimalSelect: false,\n    valueIsCorrected: false,\n    valueIsOutOfRange: false\n  };\n};\n/**\n * @hidden\n */\nexport var getStateOrPropsValue = function getStateOrPropsValue(value, stateValue) {\n  return value !== undefined ? value : stateValue;\n};\n/**\n * @hidden\n */\nexport var formatValue = function formatValue(value, format, intlService) {\n  if (value === null && value === undefined) {\n    return '';\n  }\n  if (typeof value === 'string') {\n    return value;\n  }\n  return intlService.formatNumber(value, format);\n};\n/**\n * @hidden\n */\nexport var fractionLength = function fractionLength(value) {\n  return (String(value).split('.')[1] || '').length;\n};\n/**\n * @hidden\n */\nvar maxFractionLength = function maxFractionLength(value1, value2) {\n  return Math.max(fractionLength(value1), fractionLength(value2));\n};\n/**\n * @hidden\n */\nexport var limitPrecision = function limitPrecision(precision) {\n  return Math.min(precision, MAX_PRECISION);\n};\n/**\n * @hidden\n */\nexport var toFixedPrecision = function toFixedPrecision(value, precision) {\n  var maxPrecision = limitPrecision(precision);\n  return parseFloat(value.toFixed(maxPrecision));\n};\n/**\n * @hidden\n */\nexport var increaseValue = function increaseValue(value, newState, step, min, max, format, intlService) {\n  var maxPrecision = maxFractionLength(value || 0, step || 0);\n  var increasedValue = rangeValue(toFixedPrecision((value || 0) + (step || 0), maxPrecision), min, max);\n  newState.eventValue = increasedValue;\n  newState.currentLooseValue = formatValue(increasedValue, format, intlService);\n  newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var decreaseValue = function decreaseValue(value, newState, step, min, max, format, intlService) {\n  var maxPrecision = maxFractionLength(value || 0, step || 0);\n  var decreasedValue = rangeValue(toFixedPrecision((value || 0) - (step || 0), maxPrecision), min, max);\n  newState.eventValue = decreasedValue;\n  newState.currentLooseValue = formatValue(decreasedValue, format, intlService);\n  newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var rangeValue = function rangeValue(value, min, max) {\n  if (value == null) {\n    return value;\n  }\n  if (!(value > 1 || value < 1 || value === 1)) {\n    // null, undefined or NaN\n    return null;\n  }\n  if (max !== undefined && min !== undefined && max < min) {\n    return null;\n  }\n  if (max !== undefined && value > max) {\n    value = max;\n  }\n  if (min !== undefined && value < min) {\n    value = min;\n  }\n  return value;\n};\n/**\n * @hidden\n */\nexport var getMaxCursorPosition = function getMaxCursorPosition(nextValue, formatInfo) {\n  var formatSuffixIndex = formatInfo.findIndex(function (_a) {\n    var _ = _a[0],\n      currSuffix = _a[1];\n    return Boolean(currSuffix) && nextValue.indexOf(currSuffix) === nextValue.length - currSuffix.length;\n  });\n  if (formatSuffixIndex === -1) {\n    return -1;\n  }\n  var suffix = formatInfo[formatSuffixIndex][1];\n  return nextValue.length - suffix.length;\n};\n/**\n * @hidden\n */\nexport var getMinCursorPosition = function getMinCursorPosition(nextValue, formatInfo) {\n  var formatPrefixIndex = formatInfo.findIndex(function (_a) {\n    var currPrefix = _a[0],\n      _ = _a[1];\n    return Boolean(currPrefix) && nextValue.indexOf(currPrefix) === 0;\n  });\n  if (formatPrefixIndex === -1) {\n    return -1;\n  }\n  var prefix = formatInfo[formatPrefixIndex][0];\n  return prefix.length;\n};\n/**\n * @hidden\n */\nexport var rangeSelection = function rangeSelection(nextLooseValue, formatInfo, newState) {\n  var maxPosition = getMaxCursorPosition(nextLooseValue, formatInfo);\n  if (maxPosition !== -1 && newState.selectionStart > maxPosition) {\n    newState.selectionStart = newState.selectionEnd = maxPosition;\n    return;\n  }\n  if (newState.selectionStart > nextLooseValue.length) {\n    newState.selectionStart = newState.selectionEnd = nextLooseValue.length;\n  }\n  var minPosition = getMinCursorPosition(nextLooseValue, formatInfo);\n  if (minPosition !== -1 && newState.selectionStart < minPosition) {\n    newState.selectionStart = newState.selectionEnd = minPosition;\n  }\n  if (newState.selectionStart === -1) {\n    newState.selectionStart = newState.selectionEnd = 0;\n  }\n};\n/**\n * @hidden\n */\nexport var setSelection = function setSelection(newState, newIndex, nextLooseValue, formatInfo) {\n  newState.selectionStart = newState.selectionEnd = newIndex;\n  rangeSelection(nextLooseValue, formatInfo, newState);\n};\n/**\n * @hidden\n */\nexport var setInvalid = function setInvalid(newState, format, formatInfo, intlService) {\n  newState.eventValue = intlService.parseNumber(newState.prevLooseValue, format);\n  newState.currentLooseValue = newState.prevLooseValue;\n  newState.valueIsCorrected = true;\n  setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);\n};\n/**\n * @hidden\n */\nexport var isMinusSymbolAdded = function isMinusSymbolAdded(newState, symbols) {\n  var newText = String(newState.currentLooseValue);\n  var oldText = String(newState.prevLooseValue);\n  return newText.split(symbols.minusSign).length !== oldText.split(symbols.minusSign).length && newText.length === oldText.length + symbols.minusSign.length;\n};\n/**\n * @hidden\n */\nexport var isMinusSymbolRemoved = function isMinusSymbolRemoved(newState, symbols) {\n  var newText = String(newState.currentLooseValue);\n  var oldText = String(newState.prevLooseValue);\n  return newText.indexOf(symbols.minusSign) === -1 && oldText.indexOf(symbols.minusSign) !== -1;\n};\n/**\n * @hidden\n */\nexport var isDecimalDuplicated = function isDecimalDuplicated(newState, symbols) {\n  var newText = String(newState.currentLooseValue);\n  return newText.split(symbols.decimal).length > 2;\n};\n/**\n * @hidden\n */\nexport var getFormatPrefixSufix = function getFormatPrefixSufix(format, intlService) {\n  var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n  var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n  var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n  var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n  var positivePrefix = getPrefix(positiveResult);\n  var negativePrefix = getPrefix(negativeResult);\n  var zeroPrefix = getPrefix(zeroResult);\n  var onePrefix = getPrefix(oneResult);\n  var positiveSuffix = getSuffix(positiveResult);\n  var negativeSuffix = getSuffix(negativeResult);\n  var zeroSuffix = getSuffix(zeroResult);\n  var oneSuffix = getSuffix(oneResult);\n  return {\n    positiveInfo: [positivePrefix, positiveSuffix],\n    negativeInfo: [negativePrefix, negativeSuffix],\n    zeroInfo: [zeroPrefix, zeroSuffix],\n    oneInfo: [onePrefix, oneSuffix]\n  };\n};\n/**\n * @hidden\n */\nexport var getFormatSymbols = function getFormatSymbols(format, intlService) {\n  var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n  var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n  var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n  var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n  var symbols = intlService.numberSymbols();\n  var sanitizeRegex = new RegExp(\"[\\\\d\\\\\".concat(symbols.decimal).concat(symbols.group, \"]\"), 'g');\n  var resultWithDuplicates = [positiveResult, negativeResult, zeroResult, oneResult].map(function (result) {\n    return result.replace(sanitizeRegex, '');\n  }).join('');\n  return resultWithDuplicates.split('').filter(function (x, n, s) {\n    return s.indexOf(x) === n;\n  }).join('');\n};\n/**\n * @hidden\n */\nexport var getInitialPosition = function getInitialPosition(nextLooseValue, symbols) {\n  var decimalIdex = nextLooseValue.indexOf(symbols.decimal);\n  if (decimalIdex > -1) {\n    return decimalIdex;\n  }\n  return getLastNumberIndex(nextLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var reverseString = function reverseString(str) {\n  return str.split('').reverse().join('');\n};\n/**\n * @hidden\n */\nexport var getLastNumberIndex = function getLastNumberIndex(currentLooseValue, inputRegex) {\n  return currentLooseValue.length - reverseString(currentLooseValue).search(inputRegex);\n};\n/**\n * @hidden\n */\nexport var getPrefix = function getPrefix(str) {\n  return str.split(str[str.search(DIGITS_REGEX)])[0];\n};\n/**\n * @hidden\n */\nexport var getSuffix = function getSuffix(str) {\n  var reversedString = reverseString(str);\n  return reverseString(reversedString.split(reversedString[reversedString.search(DIGITS_REGEX)])[0]);\n};\n/**\n * @hidden\n */\nexport var getFirstNumberIndex = function getFirstNumberIndex(prevLooseValue, inputRegex) {\n  return prevLooseValue.search(inputRegex);\n};\n/**\n * @hidden\n */\nexport var getDecimalCount = function getDecimalCount(value, decimal) {\n  var currentDecimalPlace = value.indexOf(decimal);\n  return currentDecimalPlace > -1 ? value.length - currentDecimalPlace - 1 : 0;\n};\n/**\n * @hidden\n */\nexport var changeBasedSelection = function changeBasedSelection(currentValue, nextValue, selectionPosition, isDelete, sanitizeRegex) {\n  var isCurrentLeadingZero = currentValue.replace(sanitizeRegex, '')[0] === '0';\n  var isNextLeadingZero = nextValue.replace(sanitizeRegex, '')[0] === '0';\n  if (isCurrentLeadingZero && !isNextLeadingZero) {\n    return selectionPosition - 1;\n  }\n  if (isNextLeadingZero && isDelete) {\n    return selectionPosition + 1;\n  }\n  var numberCounter = 0;\n  for (var idx = 0; idx < selectionPosition; idx++) {\n    if (DIGITS_REGEX.test(currentValue.charAt(idx))) {\n      numberCounter++;\n    }\n  }\n  var newSelection = 0;\n  while (numberCounter > 0 && nextValue.length > newSelection) {\n    if (DIGITS_REGEX.test(nextValue.charAt(newSelection))) {\n      numberCounter--;\n    }\n    newSelection++;\n  }\n  return newSelection;\n};\n/**\n * @hidden\n */\nexport var sanitizeNumber = function sanitizeNumber(state, format, intlService) {\n  var newState = __assign({}, state);\n  var prevLooseValue = newState.prevLooseValue;\n  var symbols = intlService.numberSymbols();\n  var restrictedSymbols = getFormatSymbols(format, intlService);\n  var currentLooseValueAsString = String(newState.currentLooseValue);\n  var prevLooseValueAsString = String(prevLooseValue);\n  var sanitizeRegex = new RegExp(\"[^\\\\d\\\\\".concat(symbols.decimal, \"]\"), 'g');\n  var sanitizeGroupRegex = new RegExp(\"[^\\\\d\\\\\".concat(symbols.decimal, \"\\\\\").concat(symbols.group, \"]\"), 'g');\n  var allSymbolsRegex = new RegExp(\"[\\\\d\\\\\".concat(symbols.decimal, \"\\\\\").concat(symbols.group, \"]\"));\n  var sanitizedString = currentLooseValueAsString.replace(sanitizeRegex, '');\n  var numberStart = getFirstNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n  var numberEnd = numberStart === -1 ? -1 : getLastNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n  var decimalIndex = currentLooseValueAsString.indexOf(symbols.decimal);\n  var sanitizedFormattedString = (currentLooseValueAsString.substring(0, numberStart) + currentLooseValueAsString.substring(numberStart, numberEnd).replace(sanitizeGroupRegex, '') + currentLooseValueAsString.substring(numberEnd, currentLooseValueAsString.length)).split('').filter(function (s) {\n    return restrictedSymbols.indexOf(s) !== -1 || s.search(allSymbolsRegex) !== -1;\n  }).join('');\n  var formattedMax = intlService.formatNumber(MAX_DECIMAL, format).replace(sanitizeRegex, '');\n  var maxDecimalIndex = formattedMax.indexOf(symbols.decimal);\n  var maxDecimalCount = maxDecimalIndex > -1 ? formattedMax.length - maxDecimalIndex - 1 : 0;\n  var formattedMin = intlService.formatNumber(MIN_DECIMAL, format).replace(sanitizeRegex, '');\n  var minDecimalIndex = formattedMin.indexOf(symbols.decimal);\n  var minDecimalCount = minDecimalIndex > -1 ? formattedMin.length - minDecimalIndex - 1 : 0;\n  var _a = getFormatPrefixSufix(format, intlService),\n    positiveInfo = _a.positiveInfo,\n    negativeInfo = _a.negativeInfo,\n    zeroInfo = _a.zeroInfo,\n    oneInfo = _a.oneInfo;\n  var formatInfo = [positiveInfo, negativeInfo, zeroInfo, oneInfo];\n  var isFormatContainPrefixSuffix = formatInfo.findIndex(function (info) {\n    return info.findIndex(function (nestedInfo) {\n      return Boolean(nestedInfo);\n    }) !== -1;\n  }) !== 1;\n  var isDelete = currentLooseValueAsString.length > 0 && currentLooseValueAsString.length < prevLooseValueAsString.length;\n  var isPercentFormat = typeof format === 'string' && format[0] === 'p' && currentLooseValueAsString && currentLooseValueAsString.indexOf(symbols.percentSign) === -1;\n  if (!newState.isPaste) {\n    // 1. Empty input\n    if (currentLooseValueAsString === '') {\n      newState.eventValue = null;\n      newState.currentLooseValue = '';\n      return newState;\n    }\n    // 2. Check is minus sign\n    if (newState.currentLooseValue === symbols.minusSign && intlService.formatNumber(-0, format) !== prevLooseValueAsString) {\n      newState.eventValue = -0;\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols), newState.currentLooseValue, formatInfo);\n      return newState;\n    }\n    // 3. Minus sign toggle\n    if (isMinusSymbolAdded(newState, symbols)) {\n      var nextValue = intlService.parseNumber(prevLooseValue, format);\n      newState.eventValue = -(nextValue !== null ? nextValue : 0);\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      var currentNumberStart = getFirstNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n      var oldNumberStart = getFirstNumberIndex(prevLooseValueAsString, DIGITS_REGEX);\n      setSelection(newState, newState.selectionEnd - 1 + (currentNumberStart - oldNumberStart), newState.currentLooseValue, formatInfo);\n      return newState;\n    }\n    if (isMinusSymbolRemoved(newState, symbols)) {\n      newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n      setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);\n      return newState;\n    }\n    // 4. Check is decimal symbol\n    if (newState.currentLooseValue === symbols.decimal) {\n      newState.eventValue = 0;\n      var valueCandidate = formatValue(newState.eventValue, format, intlService);\n      if (minDecimalCount === 0 && maxDecimalCount > 0) {\n        var currentLastNumberIndex = getLastNumberIndex(valueCandidate, DIGITS_REGEX);\n        newState.currentLooseValue = valueCandidate.substring(0, currentLastNumberIndex) + symbols.decimal + valueCandidate.substring(currentLastNumberIndex);\n      } else {\n        newState.currentLooseValue = valueCandidate;\n      }\n      setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols) + 1, newState.currentLooseValue, formatInfo);\n      return newState;\n    }\n    // 5. Duplicate decimal - it's possible only as trailing\n    if (isDecimalDuplicated(newState, symbols)) {\n      setInvalid(newState, format, formatInfo, intlService);\n      return newState;\n    }\n    // 6. Percent format\n    if (isPercentFormat) {\n      newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format) / 100;\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      return newState;\n    }\n    // 7. More than 15 numeric symbols\n    var numericSymbols = String(newState.currentLooseValue).replace(/[^\\d]/g, '');\n    if (numericSymbols.length > MAX_PRECISION) {\n      setInvalid(newState, format, formatInfo, intlService);\n      return newState;\n    }\n    // 8. Check prefix / suffix for modifications\n    if (sanitizedString !== currentLooseValueAsString && currentLooseValueAsString && isFormatContainPrefixSuffix) {\n      var formatInfoIndex = formatInfo.findIndex(function (_a) {\n        var prefix = _a[0],\n          suffix = _a[1];\n        var prefixIndex = currentLooseValueAsString.indexOf(prefix);\n        var suffixIndex = currentLooseValueAsString.indexOf(suffix);\n        var prefixFound = prefixIndex === 0;\n        var suffixFound = suffixIndex === currentLooseValueAsString.length - suffix.length;\n        var prefixGap = prefixIndex + prefix.length !== numberStart && numberStart !== -1 && currentLooseValueAsString[prefixIndex + prefix.length] !== symbols.decimal;\n        var suffixGap = suffixIndex !== numberEnd && numberEnd !== -1 && currentLooseValueAsString[suffixIndex - 1] !== symbols.decimal;\n        if (prefix && suffix) {\n          if (prefixGap || suffixGap) {\n            return false;\n          }\n          return prefixFound && suffixFound;\n        }\n        if (prefix) {\n          if (prefixGap) {\n            return false;\n          }\n          return prefixFound;\n        }\n        if (suffix) {\n          if (suffixGap) {\n            return false;\n          }\n          return suffixFound;\n        }\n        return false;\n      });\n      if (formatInfoIndex === -1) {\n        setInvalid(newState, format, formatInfo, intlService);\n        return newState;\n      }\n    }\n    // 9. Value ending on decimal separator (here as decimal might be typed inside format)\n    if (sanitizedString[sanitizedString.length - 1] === symbols.decimal && maxDecimalCount > 0) {\n      newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format);\n      newState.currentLooseValue = sanitizedFormattedString;\n      return newState;\n    }\n    // 10. prevent deleting decimal and group symbols\n    if (newState.currentLooseValue && prevLooseValue) {\n      var isSpecialSymbolDeleted = (restrictedSymbols + symbols.decimal + symbols.group).split('').findIndex(function (s) {\n        if (currentLooseValueAsString.split('').filter(function (x) {\n          return x === s;\n        }).length < prevLooseValueAsString.split('').filter(function (x) {\n          return x === s;\n        }).length && currentLooseValueAsString.length + 1 === prevLooseValueAsString.length) {\n          if (s === symbols.decimal && getDecimalCount(prevLooseValueAsString.replace(sanitizeRegex, ''), symbols.decimal) === 0) {\n            return false;\n          }\n          return true;\n        }\n        return false;\n      }) > -1;\n      if (isSpecialSymbolDeleted) {\n        newState.eventValue = intlService.parseNumber(state.prevLooseValue, format);\n        newState.currentLooseValue = state.prevLooseValue;\n        return newState;\n      }\n    }\n    var currentDecimalCount = getDecimalCount(sanitizedString, symbols.decimal);\n    var endsOnDecimal = sanitizedString[sanitizedString.length - 1] === '0';\n    // 11. Deleting more decimals than allowed\n    if (isDelete && endsOnDecimal && currentDecimalCount < minDecimalCount) {\n      newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n      newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n      return newState;\n    }\n    // 12. Ending on zero OR more decimals than allowed\n    if (currentDecimalCount > 0) {\n      var valueUntillDecimal = currentLooseValueAsString.substring(0, decimalIndex);\n      if (endsOnDecimal && (!valueUntillDecimal || prevLooseValueAsString.indexOf(valueUntillDecimal) !== 0)) {\n        // ending on zero but typing before decimal separator\n        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n        var nextLooseValue = formatValue(newState.eventValue, format, intlService);\n        setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n        newState.currentLooseValue = nextLooseValue;\n        return newState;\n      }\n      if (currentDecimalCount > maxDecimalCount) {\n        // typing more symbols than format allows\n        var looseDecimalPlace = currentLooseValueAsString.indexOf(symbols.decimal);\n        var result = currentLooseValueAsString.substring(0, looseDecimalPlace) + currentLooseValueAsString.substring(looseDecimalPlace, looseDecimalPlace + 1 + maxDecimalCount) + currentLooseValueAsString.substring(numberEnd, String(newState.currentLooseValue).length);\n        newState.eventValue = intlService.parseNumber(result, format);\n        newState.currentLooseValue = result;\n        setSelection(newState, newState.selectionStart, result, formatInfo);\n        return newState;\n      }\n      if (minDecimalCount !== maxDecimalCount && currentDecimalCount <= maxDecimalCount && endsOnDecimal) {\n        // adding trailing zeroes\n        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n        newState.currentLooseValue = sanitizedFormattedString;\n        return newState;\n      }\n      if (currentDecimalCount < minDecimalCount) {\n        // deleting more decimals than allowed\n        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n        newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n        return newState;\n      }\n    }\n  }\n  // X. All other values should be parsed\n  newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n  if (isPercentFormat) {\n    newState.eventValue = newState.eventValue / 100;\n  }\n  if (typeof newState.eventValue === 'number') {\n    var nextLooseValue = formatValue(newState.eventValue, format, intlService);\n    // First digit add\n    if (currentLooseValueAsString.length === 1) {\n      setSelection(newState, getInitialPosition(nextLooseValue, symbols), nextLooseValue, formatInfo);\n    } else {\n      setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n    }\n    newState.currentLooseValue = nextLooseValue;\n  } else {\n    // Case when deleting last number\n    newState.currentLooseValue = formatValue(intlService.parseNumber(sanitizedString), format, intlService);\n  }\n  return newState;\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","DEFAULT_NUMBER","MAX_DECIMAL","MIN_DECIMAL","ONE_NUMBER","ZERO_NUMBER","DIGITS_REGEX","MAX_PRECISION","getInitialState","eventValue","prevLooseValue","currentLooseValue","focused","selectionStart","undefined","selectionEnd","decimalSelect","valueIsCorrected","valueIsOutOfRange","getStateOrPropsValue","value","stateValue","formatValue","format","intlService","formatNumber","fractionLength","String","split","maxFractionLength","value1","value2","Math","max","limitPrecision","precision","min","toFixedPrecision","maxPrecision","parseFloat","toFixed","increaseValue","newState","step","increasedValue","rangeValue","getLastNumberIndex","decreaseValue","decreasedValue","getMaxCursorPosition","nextValue","formatInfo","formatSuffixIndex","findIndex","_a","_","currSuffix","Boolean","indexOf","suffix","getMinCursorPosition","formatPrefixIndex","currPrefix","prefix","rangeSelection","nextLooseValue","maxPosition","minPosition","setSelection","newIndex","setInvalid","parseNumber","isMinusSymbolAdded","symbols","newText","oldText","minusSign","isMinusSymbolRemoved","isDecimalDuplicated","decimal","getFormatPrefixSufix","positiveResult","negativeResult","zeroResult","oneResult","positivePrefix","getPrefix","negativePrefix","zeroPrefix","onePrefix","positiveSuffix","getSuffix","negativeSuffix","zeroSuffix","oneSuffix","positiveInfo","negativeInfo","zeroInfo","oneInfo","getFormatSymbols","numberSymbols","sanitizeRegex","RegExp","concat","group","resultWithDuplicates","map","result","replace","join","filter","x","getInitialPosition","decimalIdex","reverseString","str","reverse","inputRegex","search","reversedString","getFirstNumberIndex","getDecimalCount","currentDecimalPlace","changeBasedSelection","currentValue","selectionPosition","isDelete","isCurrentLeadingZero","isNextLeadingZero","numberCounter","idx","test","charAt","newSelection","sanitizeNumber","state","restrictedSymbols","currentLooseValueAsString","prevLooseValueAsString","sanitizeGroupRegex","allSymbolsRegex","sanitizedString","numberStart","numberEnd","decimalIndex","sanitizedFormattedString","substring","formattedMax","maxDecimalIndex","maxDecimalCount","formattedMin","minDecimalIndex","minDecimalCount","isFormatContainPrefixSuffix","info","nestedInfo","isPercentFormat","percentSign","isPaste","currentNumberStart","oldNumberStart","valueCandidate","currentLastNumberIndex","numericSymbols","formatInfoIndex","prefixIndex","suffixIndex","prefixFound","suffixFound","prefixGap","suffixGap","isSpecialSymbolDeleted","currentDecimalCount","endsOnDecimal","valueUntillDecimal","looseDecimalPlace"],"sources":["D:/Dự Án Tốt Nghiệp/duantotnghiep_test/frontend/node_modules/@progress/kendo-react-inputs/dist/es/numerictextbox/utils/index.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar DEFAULT_NUMBER = 1111111.1111111;\nvar MAX_DECIMAL = 0.31111111111111117;\nvar MIN_DECIMAL = 1;\nvar ONE_NUMBER = 1;\nvar ZERO_NUMBER = 0;\nvar DIGITS_REGEX = /\\d/;\nvar MAX_PRECISION = 15;\n/**\n * @hidden\n */\nexport var getInitialState = function () { return ({\n    eventValue: null,\n    prevLooseValue: '',\n    currentLooseValue: '',\n    focused: false,\n    selectionStart: undefined,\n    selectionEnd: undefined,\n    decimalSelect: false,\n    valueIsCorrected: false,\n    valueIsOutOfRange: false\n}); };\n/**\n * @hidden\n */\nexport var getStateOrPropsValue = function (value, stateValue) {\n    return value !== undefined ? value : stateValue;\n};\n/**\n * @hidden\n */\nexport var formatValue = function (value, format, intlService) {\n    if (value === null && value === undefined) {\n        return '';\n    }\n    if (typeof value === 'string') {\n        return value;\n    }\n    return intlService.formatNumber(value, format);\n};\n/**\n * @hidden\n */\nexport var fractionLength = function (value) {\n    return (String(value).split('.')[1] || '').length;\n};\n/**\n * @hidden\n */\nvar maxFractionLength = function (value1, value2) {\n    return Math.max(fractionLength(value1), fractionLength(value2));\n};\n/**\n * @hidden\n */\nexport var limitPrecision = function (precision) { return Math.min(precision, MAX_PRECISION); };\n/**\n * @hidden\n */\nexport var toFixedPrecision = function (value, precision) {\n    var maxPrecision = limitPrecision(precision);\n    return parseFloat(value.toFixed(maxPrecision));\n};\n/**\n * @hidden\n */\nexport var increaseValue = function (value, newState, step, min, max, format, intlService) {\n    var maxPrecision = maxFractionLength(value || 0, step || 0);\n    var increasedValue = rangeValue(toFixedPrecision((value || 0) + (step || 0), maxPrecision), min, max);\n    newState.eventValue = increasedValue;\n    newState.currentLooseValue = formatValue(increasedValue, format, intlService);\n    newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var decreaseValue = function (value, newState, step, min, max, format, intlService) {\n    var maxPrecision = maxFractionLength(value || 0, step || 0);\n    var decreasedValue = rangeValue(toFixedPrecision((value || 0) - (step || 0), maxPrecision), min, max);\n    newState.eventValue = decreasedValue;\n    newState.currentLooseValue = formatValue(decreasedValue, format, intlService);\n    newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var rangeValue = function (value, min, max) {\n    if (value == null) {\n        return value;\n    }\n    if (!(value > 1 || value < 1 || value === 1)) {\n        // null, undefined or NaN\n        return null;\n    }\n    if (max !== undefined && min !== undefined && max < min) {\n        return null;\n    }\n    if (max !== undefined && value > max) {\n        value = max;\n    }\n    if (min !== undefined && value < min) {\n        value = min;\n    }\n    return value;\n};\n/**\n * @hidden\n */\nexport var getMaxCursorPosition = function (nextValue, formatInfo) {\n    var formatSuffixIndex = formatInfo.findIndex(function (_a) {\n        var _ = _a[0], currSuffix = _a[1];\n        return Boolean(currSuffix) && nextValue.indexOf(currSuffix) === nextValue.length - currSuffix.length;\n    });\n    if (formatSuffixIndex === -1) {\n        return -1;\n    }\n    var suffix = formatInfo[formatSuffixIndex][1];\n    return nextValue.length - suffix.length;\n};\n/**\n * @hidden\n */\nexport var getMinCursorPosition = function (nextValue, formatInfo) {\n    var formatPrefixIndex = formatInfo.findIndex(function (_a) {\n        var currPrefix = _a[0], _ = _a[1];\n        return Boolean(currPrefix) && nextValue.indexOf(currPrefix) === 0;\n    });\n    if (formatPrefixIndex === -1) {\n        return -1;\n    }\n    var prefix = formatInfo[formatPrefixIndex][0];\n    return prefix.length;\n};\n/**\n * @hidden\n */\nexport var rangeSelection = function (nextLooseValue, formatInfo, newState) {\n    var maxPosition = getMaxCursorPosition(nextLooseValue, formatInfo);\n    if (maxPosition !== -1 && newState.selectionStart > maxPosition) {\n        newState.selectionStart = newState.selectionEnd = maxPosition;\n        return;\n    }\n    if (newState.selectionStart > nextLooseValue.length) {\n        newState.selectionStart = newState.selectionEnd = nextLooseValue.length;\n    }\n    var minPosition = getMinCursorPosition(nextLooseValue, formatInfo);\n    if (minPosition !== -1 && newState.selectionStart < minPosition) {\n        newState.selectionStart = newState.selectionEnd = minPosition;\n    }\n    if (newState.selectionStart === -1) {\n        newState.selectionStart = newState.selectionEnd = 0;\n    }\n};\n/**\n * @hidden\n */\nexport var setSelection = function (newState, newIndex, nextLooseValue, formatInfo) {\n    newState.selectionStart = newState.selectionEnd = newIndex;\n    rangeSelection(nextLooseValue, formatInfo, newState);\n};\n/**\n * @hidden\n */\nexport var setInvalid = function (newState, format, formatInfo, intlService) {\n    newState.eventValue = intlService.parseNumber(newState.prevLooseValue, format);\n    newState.currentLooseValue = newState.prevLooseValue;\n    newState.valueIsCorrected = true;\n    setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);\n};\n/**\n * @hidden\n */\nexport var isMinusSymbolAdded = function (newState, symbols) {\n    var newText = String(newState.currentLooseValue);\n    var oldText = String(newState.prevLooseValue);\n    return (newText.split(symbols.minusSign).length !== oldText.split(symbols.minusSign).length &&\n        newText.length === oldText.length + symbols.minusSign.length);\n};\n/**\n * @hidden\n */\nexport var isMinusSymbolRemoved = function (newState, symbols) {\n    var newText = String(newState.currentLooseValue);\n    var oldText = String(newState.prevLooseValue);\n    return (newText.indexOf(symbols.minusSign) === -1 && oldText.indexOf(symbols.minusSign) !== -1);\n};\n/**\n * @hidden\n */\nexport var isDecimalDuplicated = function (newState, symbols) {\n    var newText = String(newState.currentLooseValue);\n    return newText.split(symbols.decimal).length > 2;\n};\n/**\n * @hidden\n */\nexport var getFormatPrefixSufix = function (format, intlService) {\n    var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n    var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n    var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n    var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n    var positivePrefix = getPrefix(positiveResult);\n    var negativePrefix = getPrefix(negativeResult);\n    var zeroPrefix = getPrefix(zeroResult);\n    var onePrefix = getPrefix(oneResult);\n    var positiveSuffix = getSuffix(positiveResult);\n    var negativeSuffix = getSuffix(negativeResult);\n    var zeroSuffix = getSuffix(zeroResult);\n    var oneSuffix = getSuffix(oneResult);\n    return {\n        positiveInfo: [positivePrefix, positiveSuffix],\n        negativeInfo: [negativePrefix, negativeSuffix],\n        zeroInfo: [zeroPrefix, zeroSuffix],\n        oneInfo: [onePrefix, oneSuffix]\n    };\n};\n/**\n * @hidden\n */\nexport var getFormatSymbols = function (format, intlService) {\n    var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format);\n    var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format);\n    var zeroResult = intlService.formatNumber(ZERO_NUMBER, format);\n    var oneResult = intlService.formatNumber(ONE_NUMBER, format);\n    var symbols = intlService.numberSymbols();\n    var sanitizeRegex = new RegExp(\"[\\\\d\\\\\".concat(symbols.decimal).concat(symbols.group, \"]\"), 'g');\n    var resultWithDuplicates = [positiveResult, negativeResult, zeroResult, oneResult]\n        .map(function (result) { return result.replace(sanitizeRegex, ''); })\n        .join('');\n    return resultWithDuplicates\n        .split('')\n        .filter(function (x, n, s) { return s.indexOf(x) === n; })\n        .join('');\n};\n/**\n * @hidden\n */\nexport var getInitialPosition = function (nextLooseValue, symbols) {\n    var decimalIdex = nextLooseValue.indexOf(symbols.decimal);\n    if (decimalIdex > -1) {\n        return decimalIdex;\n    }\n    return getLastNumberIndex(nextLooseValue, DIGITS_REGEX);\n};\n/**\n * @hidden\n */\nexport var reverseString = function (str) {\n    return str.split('').reverse().join('');\n};\n/**\n * @hidden\n */\nexport var getLastNumberIndex = function (currentLooseValue, inputRegex) {\n    return currentLooseValue.length - reverseString(currentLooseValue).search(inputRegex);\n};\n/**\n * @hidden\n */\nexport var getPrefix = function (str) {\n    return str.split(str[str.search(DIGITS_REGEX)])[0];\n};\n/**\n * @hidden\n */\nexport var getSuffix = function (str) {\n    var reversedString = reverseString(str);\n    return reverseString(reversedString.split(reversedString[reversedString.search(DIGITS_REGEX)])[0]);\n};\n/**\n * @hidden\n */\nexport var getFirstNumberIndex = function (prevLooseValue, inputRegex) {\n    return prevLooseValue.search(inputRegex);\n};\n/**\n * @hidden\n */\nexport var getDecimalCount = function (value, decimal) {\n    var currentDecimalPlace = value.indexOf(decimal);\n    return currentDecimalPlace > -1 ? value.length - currentDecimalPlace - 1 : 0;\n};\n/**\n * @hidden\n */\nexport var changeBasedSelection = function (currentValue, nextValue, selectionPosition, isDelete, sanitizeRegex) {\n    var isCurrentLeadingZero = currentValue.replace(sanitizeRegex, '')[0] === '0';\n    var isNextLeadingZero = nextValue.replace(sanitizeRegex, '')[0] === '0';\n    if (isCurrentLeadingZero && !isNextLeadingZero) {\n        return selectionPosition - 1;\n    }\n    if (isNextLeadingZero && isDelete) {\n        return selectionPosition + 1;\n    }\n    var numberCounter = 0;\n    for (var idx = 0; idx < selectionPosition; idx++) {\n        if (DIGITS_REGEX.test(currentValue.charAt(idx))) {\n            numberCounter++;\n        }\n    }\n    var newSelection = 0;\n    while (numberCounter > 0 && nextValue.length > newSelection) {\n        if (DIGITS_REGEX.test(nextValue.charAt(newSelection))) {\n            numberCounter--;\n        }\n        newSelection++;\n    }\n    return newSelection;\n};\n/**\n * @hidden\n */\nexport var sanitizeNumber = function (state, format, intlService) {\n    var newState = __assign({}, state);\n    var prevLooseValue = newState.prevLooseValue;\n    var symbols = intlService.numberSymbols();\n    var restrictedSymbols = getFormatSymbols(format, intlService);\n    var currentLooseValueAsString = String(newState.currentLooseValue);\n    var prevLooseValueAsString = String(prevLooseValue);\n    var sanitizeRegex = new RegExp(\"[^\\\\d\\\\\".concat(symbols.decimal, \"]\"), 'g');\n    var sanitizeGroupRegex = new RegExp(\"[^\\\\d\\\\\".concat(symbols.decimal, \"\\\\\").concat(symbols.group, \"]\"), 'g');\n    var allSymbolsRegex = new RegExp(\"[\\\\d\\\\\".concat(symbols.decimal, \"\\\\\").concat(symbols.group, \"]\"));\n    var sanitizedString = currentLooseValueAsString.replace(sanitizeRegex, '');\n    var numberStart = getFirstNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n    var numberEnd = numberStart === -1 ? -1 : getLastNumberIndex(currentLooseValueAsString, DIGITS_REGEX);\n    var decimalIndex = currentLooseValueAsString.indexOf(symbols.decimal);\n    var sanitizedFormattedString = (currentLooseValueAsString.substring(0, numberStart) +\n        currentLooseValueAsString.substring(numberStart, numberEnd).replace(sanitizeGroupRegex, '') +\n        currentLooseValueAsString.substring(numberEnd, currentLooseValueAsString.length))\n        .split('')\n        .filter(function (s) { return restrictedSymbols.indexOf(s) !== -1 || s.search(allSymbolsRegex) !== -1; })\n        .join('');\n    var formattedMax = intlService.formatNumber(MAX_DECIMAL, format).replace(sanitizeRegex, '');\n    var maxDecimalIndex = formattedMax.indexOf(symbols.decimal);\n    var maxDecimalCount = maxDecimalIndex > -1 ? formattedMax.length - maxDecimalIndex - 1 : 0;\n    var formattedMin = intlService.formatNumber(MIN_DECIMAL, format).replace(sanitizeRegex, '');\n    var minDecimalIndex = formattedMin.indexOf(symbols.decimal);\n    var minDecimalCount = minDecimalIndex > -1 ? formattedMin.length - minDecimalIndex - 1 : 0;\n    var _a = getFormatPrefixSufix(format, intlService), positiveInfo = _a.positiveInfo, negativeInfo = _a.negativeInfo, zeroInfo = _a.zeroInfo, oneInfo = _a.oneInfo;\n    var formatInfo = [positiveInfo, negativeInfo, zeroInfo, oneInfo];\n    var isFormatContainPrefixSuffix = formatInfo.findIndex(function (info) { return info.findIndex(function (nestedInfo) { return Boolean(nestedInfo); }) !== -1; }) !== 1;\n    var isDelete = currentLooseValueAsString.length > 0 && currentLooseValueAsString.length < prevLooseValueAsString.length;\n    var isPercentFormat = typeof format === 'string' &&\n        format[0] === 'p' &&\n        currentLooseValueAsString &&\n        currentLooseValueAsString.indexOf(symbols.percentSign) === -1;\n    if (!newState.isPaste) {\n        // 1. Empty input\n        if (currentLooseValueAsString === '') {\n            newState.eventValue = null;\n            newState.currentLooseValue = '';\n            return newState;\n        }\n        // 2. Check is minus sign\n        if (newState.currentLooseValue === symbols.minusSign && intlService.formatNumber(-0, format) !== prevLooseValueAsString) {\n            newState.eventValue = -0;\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols), newState.currentLooseValue, formatInfo);\n            return newState;\n        }\n        // 3. Minus sign toggle\n        if (isMinusSymbolAdded(newState, symbols)) {\n            var nextValue = intlService.parseNumber(prevLooseValue, format);\n            newState.eventValue = -(nextValue !== null ? nextValue : 0);\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            var currentNumberStart = getFirstNumberIndex(newState.currentLooseValue, DIGITS_REGEX);\n            var oldNumberStart = getFirstNumberIndex(prevLooseValueAsString, DIGITS_REGEX);\n            setSelection(newState, newState.selectionEnd - 1 + (currentNumberStart - oldNumberStart), newState.currentLooseValue, formatInfo);\n            return newState;\n        }\n        if (isMinusSymbolRemoved(newState, symbols)) {\n            newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n            setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);\n            return newState;\n        }\n        // 4. Check is decimal symbol\n        if (newState.currentLooseValue === symbols.decimal) {\n            newState.eventValue = 0;\n            var valueCandidate = formatValue(newState.eventValue, format, intlService);\n            if (minDecimalCount === 0 && maxDecimalCount > 0) {\n                var currentLastNumberIndex = getLastNumberIndex(valueCandidate, DIGITS_REGEX);\n                newState.currentLooseValue = valueCandidate.substring(0, currentLastNumberIndex) +\n                    symbols.decimal +\n                    valueCandidate.substring(currentLastNumberIndex);\n            }\n            else {\n                newState.currentLooseValue = valueCandidate;\n            }\n            setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols) + 1, newState.currentLooseValue, formatInfo);\n            return newState;\n        }\n        // 5. Duplicate decimal - it's possible only as trailing\n        if (isDecimalDuplicated(newState, symbols)) {\n            setInvalid(newState, format, formatInfo, intlService);\n            return newState;\n        }\n        // 6. Percent format\n        if (isPercentFormat) {\n            newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format) / 100;\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            return newState;\n        }\n        // 7. More than 15 numeric symbols\n        var numericSymbols = String(newState.currentLooseValue).replace(/[^\\d]/g, '');\n        if (numericSymbols.length > MAX_PRECISION) {\n            setInvalid(newState, format, formatInfo, intlService);\n            return newState;\n        }\n        // 8. Check prefix / suffix for modifications\n        if (sanitizedString !== currentLooseValueAsString &&\n            currentLooseValueAsString &&\n            isFormatContainPrefixSuffix) {\n            var formatInfoIndex = formatInfo.findIndex(function (_a) {\n                var prefix = _a[0], suffix = _a[1];\n                var prefixIndex = currentLooseValueAsString.indexOf(prefix);\n                var suffixIndex = currentLooseValueAsString.indexOf(suffix);\n                var prefixFound = prefixIndex === 0;\n                var suffixFound = suffixIndex === currentLooseValueAsString.length - suffix.length;\n                var prefixGap = prefixIndex + prefix.length !== numberStart &&\n                    numberStart !== -1 &&\n                    currentLooseValueAsString[prefixIndex + prefix.length] !== symbols.decimal;\n                var suffixGap = suffixIndex !== numberEnd &&\n                    numberEnd !== -1 &&\n                    currentLooseValueAsString[suffixIndex - 1] !== symbols.decimal;\n                if (prefix && suffix) {\n                    if (prefixGap || suffixGap) {\n                        return false;\n                    }\n                    return prefixFound && suffixFound;\n                }\n                if (prefix) {\n                    if (prefixGap) {\n                        return false;\n                    }\n                    return prefixFound;\n                }\n                if (suffix) {\n                    if (suffixGap) {\n                        return false;\n                    }\n                    return suffixFound;\n                }\n                return false;\n            });\n            if (formatInfoIndex === -1) {\n                setInvalid(newState, format, formatInfo, intlService);\n                return newState;\n            }\n        }\n        // 9. Value ending on decimal separator (here as decimal might be typed inside format)\n        if (sanitizedString[sanitizedString.length - 1] === symbols.decimal && maxDecimalCount > 0) {\n            newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format);\n            newState.currentLooseValue = sanitizedFormattedString;\n            return newState;\n        }\n        // 10. prevent deleting decimal and group symbols\n        if (newState.currentLooseValue && prevLooseValue) {\n            var isSpecialSymbolDeleted = (restrictedSymbols + symbols.decimal + symbols.group)\n                .split('')\n                .findIndex(function (s) {\n                if (currentLooseValueAsString.split('').filter(function (x) { return x === s; }).length <\n                    prevLooseValueAsString.split('').filter(function (x) { return x === s; }).length &&\n                    currentLooseValueAsString.length + 1 === prevLooseValueAsString.length) {\n                    if (s === symbols.decimal &&\n                        getDecimalCount(prevLooseValueAsString.replace(sanitizeRegex, ''), symbols.decimal) === 0) {\n                        return false;\n                    }\n                    return true;\n                }\n                return false;\n            }) > -1;\n            if (isSpecialSymbolDeleted) {\n                newState.eventValue = intlService.parseNumber(state.prevLooseValue, format);\n                newState.currentLooseValue = state.prevLooseValue;\n                return newState;\n            }\n        }\n        var currentDecimalCount = getDecimalCount(sanitizedString, symbols.decimal);\n        var endsOnDecimal = sanitizedString[sanitizedString.length - 1] === '0';\n        // 11. Deleting more decimals than allowed\n        if (isDelete && endsOnDecimal && currentDecimalCount < minDecimalCount) {\n            newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n            newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n            return newState;\n        }\n        // 12. Ending on zero OR more decimals than allowed\n        if (currentDecimalCount > 0) {\n            var valueUntillDecimal = currentLooseValueAsString.substring(0, decimalIndex);\n            if (endsOnDecimal && (!valueUntillDecimal || prevLooseValueAsString.indexOf(valueUntillDecimal) !== 0)) {\n                // ending on zero but typing before decimal separator\n                newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n                var nextLooseValue = formatValue(newState.eventValue, format, intlService);\n                setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n                newState.currentLooseValue = nextLooseValue;\n                return newState;\n            }\n            if (currentDecimalCount > maxDecimalCount) {\n                // typing more symbols than format allows\n                var looseDecimalPlace = currentLooseValueAsString.indexOf(symbols.decimal);\n                var result = currentLooseValueAsString.substring(0, looseDecimalPlace) +\n                    currentLooseValueAsString.substring(looseDecimalPlace, looseDecimalPlace + 1 + maxDecimalCount) +\n                    currentLooseValueAsString.substring(numberEnd, String(newState.currentLooseValue).length);\n                newState.eventValue = intlService.parseNumber(result, format);\n                newState.currentLooseValue = result;\n                setSelection(newState, newState.selectionStart, result, formatInfo);\n                return newState;\n            }\n            if (minDecimalCount !== maxDecimalCount && currentDecimalCount <= maxDecimalCount && endsOnDecimal) {\n                // adding trailing zeroes\n                newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n                newState.currentLooseValue = sanitizedFormattedString;\n                return newState;\n            }\n            if (currentDecimalCount < minDecimalCount) {\n                // deleting more decimals than allowed\n                newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n                newState.currentLooseValue = formatValue(newState.eventValue, format, intlService);\n                return newState;\n            }\n        }\n    }\n    // X. All other values should be parsed\n    newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format);\n    if (isPercentFormat) {\n        newState.eventValue = newState.eventValue / 100;\n    }\n    if (typeof newState.eventValue === 'number') {\n        var nextLooseValue = formatValue(newState.eventValue, format, intlService);\n        // First digit add\n        if (currentLooseValueAsString.length === 1) {\n            setSelection(newState, getInitialPosition(nextLooseValue, symbols), nextLooseValue, formatInfo);\n        }\n        else {\n            setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);\n        }\n        newState.currentLooseValue = nextLooseValue;\n    }\n    else {\n        // Case when deleting last number\n        newState.currentLooseValue = formatValue(intlService.parseNumber(sanitizedString), format, intlService);\n    }\n    return newState;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}