{"ast":null,"code":"var _jsxFileName = \"D:\\\\D\\u1EF1 \\xE1n t\\u1ED1t nghi\\u1EC7p\\\\duantotnghiep_test\\\\frontend\\\\src\\\\context\\\\variation\\\\VariationState.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport VariationContext from './variationContext';\nimport axios from 'axios';\n\n// Function for cleaning null, undefined and empty strings values in objects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction clean(obj) {\n  for (var propName in obj) {\n    if (obj[propName] === null || obj[propName] === undefined || obj[propName] === '') {\n      delete obj[propName];\n    }\n  }\n  return obj;\n}\n\n// ------------------------------------------\n// Category State\n// ------------------------------------------\nconst VariationState = props => {\n  _s();\n  const [variation, setVariations] = useState([]);\n  const [variationsError, setVariationsError] = useState(null);\n  const [variationsLoading, setVariationsLoading] = useState(false);\n  const [variationsMessage, setVariationsMessage] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      setVariationsError(null);\n      setVariationsMessage(null);\n    }, 3000);\n  }, [variationsError, variationsMessage]);\n\n  // Error Handler function\n  const errorHandler = (err, info) => {\n    if (err.response) {\n      setVariationsError({\n        variant: 'danger',\n        message: `${info}, ${err.response.data.error}`\n      });\n    } else if (err.request) {\n      setVariationsError({\n        variant: 'danger',\n        message: `${info},  No response from server!`\n      });\n    } else {\n      setVariationsError({\n        variant: 'danger',\n        message: err.message\n      });\n    }\n    setVariationsLoading(false);\n  };\n\n  // Add new variation\n  const addVariation = async title => {\n    const variationBody = clean({\n      title\n    });\n    try {\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      setVariationsLoading(true);\n      await axios.post('api/variation/add', variationBody, {\n        headers\n      });\n      setVariations([...variation, variationBody]);\n      setVariationsMessage({\n        variant: 'success',\n        message: 'variation added successfully!'\n      });\n      setVariationsLoading(false);\n      setVariationsError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  // get all variation\n  const getVariations = async () => {\n    try {\n      setVariationsLoading(true);\n      const {\n        data\n      } = await axios.get('api/variation/getAll');\n      setVariations(data.variation);\n      setVariationsLoading(false);\n      setVariationsError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  // get one variation\n  const getOneVariation = async id => {\n    try {\n      const {\n        data\n      } = await axios.get(`/api/variation/${id}`);\n      return data.variation;\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n  const updateVariation = async (id, title) => {\n    try {\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      setVariationsLoading(true);\n      await axios.patch(`api/variation/${id}`, {\n        title\n      }, {\n        headers\n      });\n      getVariations();\n      setVariationsMessage({\n        variant: 'info',\n        message: 'Category updated!'\n      });\n      setVariationsLoading(false);\n      setVariationsError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(VariationContext.Provider, {\n    value: {\n      variation,\n      variationsError,\n      variationsLoading,\n      variationsMessage,\n      getVariations,\n      addVariation,\n      getOneVariation,\n      updateVariation\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(VariationState, \"siH43pbklF3mx0q+NK4gANRVJng=\");\n_c = VariationState;\nexport default VariationState;\nvar _c;\n$RefreshReg$(_c, \"VariationState\");","map":{"version":3,"names":["React","useEffect","useState","VariationContext","axios","clean","obj","propName","undefined","VariationState","props","variation","setVariations","variationsError","setVariationsError","variationsLoading","setVariationsLoading","variationsMessage","setVariationsMessage","setTimeout","errorHandler","err","info","response","variant","message","data","error","request","addVariation","title","variationBody","userToken","JSON","parse","localStorage","getItem","headers","Authorization","post","getVariations","get","getOneVariation","id","updateVariation","patch","children"],"sources":["D:/Dự án tốt nghiệp/duantotnghiep_test/frontend/src/context/variation/VariationState.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport VariationContext from './variationContext'\r\nimport axios from 'axios'\r\n\r\n// Function for cleaning null, undefined and empty strings values in objects\r\nfunction clean(obj) {\r\n  for (var propName in obj) {\r\n    if (\r\n      obj[propName] === null ||\r\n      obj[propName] === undefined ||\r\n      obj[propName] === ''\r\n    ) {\r\n      delete obj[propName]\r\n    }\r\n  }\r\n  return obj\r\n}\r\n\r\n// ------------------------------------------\r\n// Category State\r\n// ------------------------------------------\r\nconst VariationState = props => {\r\n  const [variation, setVariations] = useState([])\r\n  const [variationsError, setVariationsError] = useState(null)\r\n  const [variationsLoading, setVariationsLoading] = useState(false)\r\n  const [variationsMessage, setVariationsMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setVariationsError(null)\r\n      setVariationsMessage(null)\r\n    }, 3000)\r\n  }, [variationsError, variationsMessage])\r\n\r\n  // Error Handler function\r\n  const errorHandler = (err, info) => {\r\n    if (err.response) {\r\n      setVariationsError({\r\n        variant: 'danger',\r\n        message: `${info}, ${err.response.data.error}`,\r\n      })\r\n    } else if (err.request) {\r\n      setVariationsError({\r\n        variant: 'danger',\r\n        message: `${info},  No response from server!`,\r\n      })\r\n    } else {\r\n      setVariationsError({ variant: 'danger', message: err.message })\r\n    }\r\n    setVariationsLoading(false)\r\n  }\r\n\r\n  // Add new variation\r\n  const addVariation = async title => {\r\n    const variationBody = clean({ title })\r\n    try {\r\n      const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      }\r\n      setVariationsLoading(true)\r\n      await axios.post('api/variation/add', variationBody, { headers })\r\n      setVariations([...variation, variationBody])\r\n      setVariationsMessage({\r\n        variant: 'success',\r\n        message: 'variation added successfully!',\r\n      })\r\n      setVariationsLoading(false)\r\n      setVariationsError(null)\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  // get all variation\r\n  const getVariations = async () => {\r\n    try {\r\n      setVariationsLoading(true)\r\n      const { data } = await axios.get('api/variation/getAll')\r\n      setVariations(data.variation)\r\n      setVariationsLoading(false)\r\n      setVariationsError(null)\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  // get one variation\r\n  const getOneVariation = async id => {\r\n    try {\r\n      const { data } = await axios.get(`/api/variation/${id}`)\r\n      return data.variation\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  const updateVariation = async (id, title) => {\r\n    try {\r\n      const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      }\r\n      setVariationsLoading(true)\r\n      await axios.patch(`api/variation/${id}`, { title }, { headers })\r\n      getVariations()\r\n      setVariationsMessage({\r\n        variant: 'info',\r\n        message: 'Category updated!',\r\n      })\r\n      setVariationsLoading(false)\r\n      setVariationsError(null)\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <VariationContext.Provider\r\n      value={ {\r\n        variation,\r\n        variationsError,\r\n        variationsLoading,\r\n        variationsMessage,\r\n        getVariations,\r\n        addVariation,\r\n        getOneVariation,\r\n        updateVariation,\r\n      } }>\r\n      { props.children }\r\n    </VariationContext.Provider>\r\n  )\r\n}\r\n\r\nexport default VariationState\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}