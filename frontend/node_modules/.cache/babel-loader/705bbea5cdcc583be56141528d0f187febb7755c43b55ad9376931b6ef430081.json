{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      html {\\n        line-height: 1.5;\\n        color: \", \";\\n        background-color: \", \";\\n      }\\n\\n      /**\\n      * Allow adding a border to an element by just adding a border-width.\\n      */\\n\\n      *,\\n      *::before,\\n      *::after {\\n        border-width: 0;\\n        border-style: solid;\\n        border-color: \", \";\\n      }\\n\\n      input:-ms-input-placeholder,\\n      textarea:-ms-input-placeholder {\\n        color: \", \";\\n      }\\n\\n      input::-ms-input-placeholder,\\n      textarea::-ms-input-placeholder {\\n        color: \", \";\\n      }\\n\\n      input::placeholder,\\n      textarea::placeholder {\\n        color: \", \";\\n      }\\n    \"]);\n  _templateObject = function _templateObject() {\n    return data;\n  };\n  return data;\n}\n\n/** @jsx jsx */\nimport { jsx, Global, css } from \"@emotion/core\";\nimport { useColorMode } from \"../ColorModeProvider\";\nimport preflight from \"./preflight\";\nvar defaultConfig = function defaultConfig(theme) {\n  return {\n    light: {\n      color: theme.colors.gray[800],\n      bg: undefined,\n      borderColor: theme.colors.gray[200],\n      placeholderColor: theme.colors.gray[400]\n    },\n    dark: {\n      color: theme.colors.whiteAlpha[900],\n      bg: theme.colors.gray[800],\n      borderColor: theme.colors.whiteAlpha[300],\n      placeholderColor: theme.colors.whiteAlpha[400]\n    }\n  };\n};\nvar CSSReset = function CSSReset(_ref) {\n  var config = _ref.config;\n  var _useColorMode = useColorMode(),\n    colorMode = _useColorMode.colorMode;\n  var configCSS = function configCSS(theme) {\n    var _defaultConfig = defaultConfig(theme);\n    var _config = config ? config(theme, _defaultConfig) : defaultConfig(theme);\n    var _config$colorMode = _config[colorMode],\n      color = _config$colorMode.color,\n      bg = _config$colorMode.bg,\n      borderColor = _config$colorMode.borderColor,\n      placeholderColor = _config$colorMode.placeholderColor;\n    return css(_templateObject(), color, bg, borderColor, placeholderColor, placeholderColor, placeholderColor);\n  };\n  return jsx(Global, {\n    styles: function styles(theme) {\n      return css([preflight(theme), configCSS(theme)]);\n    }\n  });\n};\nexport default CSSReset;","map":{"version":3,"names":["_taggedTemplateLiteralLoose","_templateObject","data","jsx","Global","css","useColorMode","preflight","defaultConfig","theme","light","color","colors","gray","bg","undefined","borderColor","placeholderColor","dark","whiteAlpha","CSSReset","_ref","config","_useColorMode","colorMode","configCSS","_defaultConfig","_config","_config$colorMode","styles"],"sources":["D:/Dự Án Tốt Nghiệp/duantotnghiep_test/frontend/node_modules/@chakra-ui/core/dist/es/CSSReset/index.js"],"sourcesContent":["import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      html {\\n        line-height: 1.5;\\n        color: \", \";\\n        background-color: \", \";\\n      }\\n\\n      /**\\n      * Allow adding a border to an element by just adding a border-width.\\n      */\\n\\n      *,\\n      *::before,\\n      *::after {\\n        border-width: 0;\\n        border-style: solid;\\n        border-color: \", \";\\n      }\\n\\n      input:-ms-input-placeholder,\\n      textarea:-ms-input-placeholder {\\n        color: \", \";\\n      }\\n\\n      input::-ms-input-placeholder,\\n      textarea::-ms-input-placeholder {\\n        color: \", \";\\n      }\\n\\n      input::placeholder,\\n      textarea::placeholder {\\n        color: \", \";\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { jsx, Global, css } from \"@emotion/core\";\nimport { useColorMode } from \"../ColorModeProvider\";\nimport preflight from \"./preflight\";\n\nvar defaultConfig = function defaultConfig(theme) {\n  return {\n    light: {\n      color: theme.colors.gray[800],\n      bg: undefined,\n      borderColor: theme.colors.gray[200],\n      placeholderColor: theme.colors.gray[400]\n    },\n    dark: {\n      color: theme.colors.whiteAlpha[900],\n      bg: theme.colors.gray[800],\n      borderColor: theme.colors.whiteAlpha[300],\n      placeholderColor: theme.colors.whiteAlpha[400]\n    }\n  };\n};\n\nvar CSSReset = function CSSReset(_ref) {\n  var config = _ref.config;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var configCSS = function configCSS(theme) {\n    var _defaultConfig = defaultConfig(theme);\n\n    var _config = config ? config(theme, _defaultConfig) : defaultConfig(theme);\n\n    var _config$colorMode = _config[colorMode],\n        color = _config$colorMode.color,\n        bg = _config$colorMode.bg,\n        borderColor = _config$colorMode.borderColor,\n        placeholderColor = _config$colorMode.placeholderColor;\n    return css(_templateObject(), color, bg, borderColor, placeholderColor, placeholderColor, placeholderColor);\n  };\n\n  return jsx(Global, {\n    styles: function styles(theme) {\n      return css([preflight(theme), configCSS(theme)]);\n    }\n  });\n};\n\nexport default CSSReset;"],"mappings":"AAAA,OAAOA,2BAA2B,MAAM,mDAAmD;AAE3F,SAASC,eAAe,GAAG;EACzB,IAAIC,IAAI,GAAGF,2BAA2B,CAAC,CAAC,4DAA4D,EAAE,+BAA+B,EAAE,+OAA+O,EAAE,2GAA2G,EAAE,6GAA6G,EAAE,yFAAyF,EAAE,kBAAkB,CAAC,CAAC;EAEnsBC,eAAe,GAAG,SAASA,eAAe,GAAG;IAC3C,OAAOC,IAAI;EACb,CAAC;EAED,OAAOA,IAAI;AACb;;AAEA;AACA,SAASC,GAAG,EAAEC,MAAM,EAAEC,GAAG,QAAQ,eAAe;AAChD,SAASC,YAAY,QAAQ,sBAAsB;AACnD,OAAOC,SAAS,MAAM,aAAa;AAEnC,IAAIC,aAAa,GAAG,SAASA,aAAa,CAACC,KAAK,EAAE;EAChD,OAAO;IACLC,KAAK,EAAE;MACLC,KAAK,EAAEF,KAAK,CAACG,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;MAC7BC,EAAE,EAAEC,SAAS;MACbC,WAAW,EAAEP,KAAK,CAACG,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;MACnCI,gBAAgB,EAAER,KAAK,CAACG,MAAM,CAACC,IAAI,CAAC,GAAG;IACzC,CAAC;IACDK,IAAI,EAAE;MACJP,KAAK,EAAEF,KAAK,CAACG,MAAM,CAACO,UAAU,CAAC,GAAG,CAAC;MACnCL,EAAE,EAAEL,KAAK,CAACG,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;MAC1BG,WAAW,EAAEP,KAAK,CAACG,MAAM,CAACO,UAAU,CAAC,GAAG,CAAC;MACzCF,gBAAgB,EAAER,KAAK,CAACG,MAAM,CAACO,UAAU,CAAC,GAAG;IAC/C;EACF,CAAC;AACH,CAAC;AAED,IAAIC,QAAQ,GAAG,SAASA,QAAQ,CAACC,IAAI,EAAE;EACrC,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM;EAExB,IAAIC,aAAa,GAAGjB,YAAY,EAAE;IAC9BkB,SAAS,GAAGD,aAAa,CAACC,SAAS;EAEvC,IAAIC,SAAS,GAAG,SAASA,SAAS,CAAChB,KAAK,EAAE;IACxC,IAAIiB,cAAc,GAAGlB,aAAa,CAACC,KAAK,CAAC;IAEzC,IAAIkB,OAAO,GAAGL,MAAM,GAAGA,MAAM,CAACb,KAAK,EAAEiB,cAAc,CAAC,GAAGlB,aAAa,CAACC,KAAK,CAAC;IAE3E,IAAImB,iBAAiB,GAAGD,OAAO,CAACH,SAAS,CAAC;MACtCb,KAAK,GAAGiB,iBAAiB,CAACjB,KAAK;MAC/BG,EAAE,GAAGc,iBAAiB,CAACd,EAAE;MACzBE,WAAW,GAAGY,iBAAiB,CAACZ,WAAW;MAC3CC,gBAAgB,GAAGW,iBAAiB,CAACX,gBAAgB;IACzD,OAAOZ,GAAG,CAACJ,eAAe,EAAE,EAAEU,KAAK,EAAEG,EAAE,EAAEE,WAAW,EAAEC,gBAAgB,EAAEA,gBAAgB,EAAEA,gBAAgB,CAAC;EAC7G,CAAC;EAED,OAAOd,GAAG,CAACC,MAAM,EAAE;IACjByB,MAAM,EAAE,SAASA,MAAM,CAACpB,KAAK,EAAE;MAC7B,OAAOJ,GAAG,CAAC,CAACE,SAAS,CAACE,KAAK,CAAC,EAAEgB,SAAS,CAAChB,KAAK,CAAC,CAAC,CAAC;IAClD;EACF,CAAC,CAAC;AACJ,CAAC;AAED,eAAeW,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}