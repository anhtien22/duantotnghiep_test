{"ast":null,"code":"var _jsxFileName = \"D:\\\\D\\u1EF1 \\xC1n T\\u1ED1t Nghi\\u1EC7p\\\\duantotnghiep_test\\\\frontend\\\\src\\\\context\\\\user\\\\UserState.js\",\n    _s = $RefreshSig$();\n\nimport UserContext from './UserContext';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Function for cleaning null, undefined and empty strings values in objects\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction clean(obj) {\n  for (var propName in obj) {\n    if (obj[propName] === null || obj[propName] === undefined || obj[propName] === '') {\n      delete obj[propName];\n    }\n  }\n\n  return obj;\n}\n\nconst UserState = props => {\n  _s();\n\n  //fort navigate\n  const navigate = useNavigate(); // axios config\n\n  const userToken = JSON.parse(localStorage.getItem('userToken'));\n  const headers = {\n    Authorization: `Bearer ${userToken || ''}`\n  };\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n  const [user, setUser] = useState(userInfo || null);\n  const [userError, setUserError] = useState(null);\n  const [userLoading, setUserLoading] = useState(false);\n  const [userMessage, setUserMessage] = useState(null);\n  const [allUsers, setAllUsers] = useState([]); //   for disabling the alert messages after 3 seconds\n\n  useEffect(() => {\n    setTimeout(() => {\n      setUserMessage(null);\n      setUserError(null);\n    }, 3000);\n  }, [userMessage, userError]); // Error handler funtion\n\n  const errorHandler = (err, info) => {\n    if (info === undefined || null) {\n      info = '';\n    }\n\n    if (err.response) {\n      setUserError({\n        variant: 'danger',\n        message: `${info} ${err.response.data.error}`\n      });\n    } else if (err.request) {\n      setUserError({\n        variant: 'danger',\n        message: `${info} No response from server`\n      });\n    } else {\n      setUserError({\n        variant: 'danger',\n        message: err.message\n      });\n    }\n\n    setUserLoading(false);\n  }; // -----------------------------------------------------------------\n  // Login user\n  // -----------------------------------------------------------------\n\n\n  const login = async (email, password) => {\n    try {\n      setUserLoading(true);\n      const {\n        data\n      } = await axios.post(`api/users/login`, {\n        email,\n        password\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data.user));\n      localStorage.setItem('userToken', JSON.stringify(data.token));\n      setUser(data.user);\n      setUserError(null);\n      setUserLoading(false);\n      setUserMessage({\n        variant: 'success',\n        message: 'Đăng nhập thành công'\n      });\n      navigate('/'); //   history.push('/')\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // -----------------------------------------------------------------\n  // Signup a new user\n  // -----------------------------------------------------------------\n\n\n  const signup = async (name, email, password) => {\n    try {\n      const body = clean({\n        name,\n        email,\n        password\n      });\n      setUserLoading(true);\n      const {\n        data\n      } = await axios.post(`api/users/register`, body);\n      localStorage.setItem('userInfo', JSON.stringify(data.user));\n      localStorage.setItem('userToken', JSON.stringify(data.token));\n      setUser(data.user);\n      setUserError(null);\n      setUserLoading(false);\n      setUserMessage({\n        variant: 'success',\n        message: 'Đăng ký thành công'\n      });\n      navigate('/');\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // -----------------------------------------------------------------\n  // Logout a user\n  // -----------------------------------------------------------------\n\n\n  const logout = async () => {\n    try {\n      setUserLoading(true); // await axios.post(`api/users/logout`, null, {\n      //   headers,\n      // })\n\n      localStorage.removeItem('userInfo');\n      localStorage.removeItem('userToken');\n      localStorage.removeItem('react-use-cart');\n      setUser(null);\n      setUserError(null);\n      setUserLoading(false);\n      setUserMessage({\n        variant: 'dark',\n        message: 'Bạn đã đăng xuất!'\n      });\n      navigate('/login');\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // -----------------------------------------------------------------\n  // Read user profile\n  // -----------------------------------------------------------------\n\n\n  const readProfile = async () => {\n    try {\n      setUserLoading(true);\n      const {\n        data\n      } = await axios.get('api/users/profile', {\n        headers\n      });\n      setUserError(null);\n      setUserLoading(false);\n      return data;\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // -----------------------------------------------------------------\n  // Edit Profile\n  // -----------------------------------------------------------------\n\n\n  const editProfile = async (name, email) => {\n    try {\n      setUserLoading(true);\n      const body = clean({\n        name,\n        email\n      });\n      const {\n        data\n      } = await axios.patch('api/users/profile', body, {\n        headers\n      });\n      setUser(data.user);\n      localStorage.setItem('userInfo', JSON.stringify(data.user));\n      setUserError(null);\n      setUserLoading(false);\n      setUserMessage({\n        variant: 'success',\n        message: 'Hồ sơ của bạn đã được cập nhật thành công'\n      });\n      return data;\n    } catch (err) {\n      errorHandler(err, 'Không thể cập nhật hồ sơ của bạn!');\n    }\n  }; // -----------------------------------------------------------------\n  // Get all users\n  // -----------------------------------------------------------------\n\n\n  const getAllUsers = async () => {\n    try {\n      setUserLoading(true);\n      const {\n        data\n      } = await axios.get('/api/users/getAll', {\n        headers\n      });\n      setAllUsers(data.users);\n      setUserError(null);\n      setUserLoading(false);\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // -----------------------------------------------------------------\n  // Delete Profile\n  // -----------------------------------------------------------------\n\n\n  const deleteProfile = async () => {\n    try {\n      setUserLoading(false);\n      await axios.delete('api/users/me', {\n        headers\n      });\n      localStorage.removeItem('userInfo');\n      setUser(null);\n      setUserError(null);\n      setUserLoading(false);\n      setUserMessage({\n        variant: 'danger',\n        message: 'Profile deleted'\n      });\n      navigate('/login');\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  const getOneUserAdmin = async id => {\n    try {\n      setUserLoading(true);\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      const {\n        data\n      } = await axios.get(`/api/users/admin/user/${id}`, {\n        headers\n      });\n      setUserLoading(false);\n      setUserError(null);\n      return data.user;\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  const forgotPassword = async payload => {\n    try {\n      setUserLoading(true);\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/users/password/forgot\", {\n        email: payload.email\n      }, config);\n      console.log(\"data\", data);\n      setUserLoading(false);\n      setUserError(null);\n      return data.user;\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  const resetPassword = async (token, payload) => {\n    try {\n      setUserLoading(true);\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/api/users/password/reset/${token}`, {\n        password: payload.password,\n        confirmPassword: payload.confirmPassword\n      }, config);\n      console.log(\"data\", data);\n      setUserLoading(false);\n      setUserError(null);\n      return data.user;\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  const updatePassword = async payload => {\n    try {\n      // setUserLoading(true)\n      console.log(\"payload\", payload); // const headers = {\n      //   Authorization: `Bearer ${userToken && userToken}`,\n      //   \"Content-Type\": \"application/json\",\n      // };\n      // const res = await fetch(\n      //   `/api/users/profile/updatepassword`,\n      //   {\n      //     oldPassword: payload.oldPassword,\n      //     newPassword: payload.newPassword,\n      //     confirmPassword: payload.confirmPassword,\n      //   },\n      //   config\n      // );\n\n      const res = await fetch(`/api/users/profile/updatepassword`, {\n        method: \"PATCH\",\n        headers,\n        body: JSON.stringify({\n          oldPassword: payload.oldPassword,\n          newPassword: payload.newPassword,\n          confirmPassword: payload.confirmPassword\n        })\n      });\n      console.log(\"data\", res); // setUserLoading(false)\n      // setUserError(null)\n      // return data.user;\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      userError,\n      userLoading,\n      userMessage,\n      allUsers,\n      login,\n      signup,\n      logout,\n      readProfile,\n      editProfile,\n      getAllUsers,\n      deleteProfile,\n      getOneUserAdmin,\n      forgotPassword,\n      resetPassword,\n      updatePassword\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n}; // -----------------------------------------\n//  Get One user admin\n//   ---------------------------------------\n\n\n_s(UserState, \"1od6yVAorIlEBCSJsqml6uPcWhY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UserState;\nexport default UserState;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserState\");","map":{"version":3,"sources":["D:/Dự Án Tốt Nghiệp/duantotnghiep_test/frontend/src/context/user/UserState.js"],"names":["UserContext","React","useState","useEffect","axios","useNavigate","clean","obj","propName","undefined","UserState","props","navigate","userToken","JSON","parse","localStorage","getItem","headers","Authorization","userInfo","user","setUser","userError","setUserError","userLoading","setUserLoading","userMessage","setUserMessage","allUsers","setAllUsers","setTimeout","errorHandler","err","info","response","variant","message","data","error","request","login","email","password","post","setItem","stringify","token","signup","name","body","logout","removeItem","readProfile","get","editProfile","patch","getAllUsers","users","deleteProfile","delete","getOneUserAdmin","id","forgotPassword","payload","config","console","log","resetPassword","put","confirmPassword","updatePassword","res","fetch","method","oldPassword","newPassword","children"],"mappings":"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","sourcesContent":["import UserContext from './UserContext'\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n// Function for cleaning null, undefined and empty strings values in objects\r\nfunction clean(obj) {\r\n  for (var propName in obj) {\r\n    if (\r\n      obj[propName] === null ||\r\n      obj[propName] === undefined ||\r\n      obj[propName] === ''\r\n    ) {\r\n      delete obj[propName]\r\n    }\r\n  }\r\n  return obj\r\n}\r\n\r\nconst UserState = props => {\r\n  //fort navigate\r\n  const navigate = useNavigate()\r\n\r\n  // axios config\r\n  const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n  const headers = {\r\n    Authorization: `Bearer ${userToken || ''}`,\r\n  }\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n  const [user, setUser] = useState(userInfo || null)\r\n  const [userError, setUserError] = useState(null)\r\n  const [userLoading, setUserLoading] = useState(false)\r\n  const [userMessage, setUserMessage] = useState(null)\r\n  const [allUsers, setAllUsers] = useState([])\r\n\r\n  //   for disabling the alert messages after 3 seconds\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setUserMessage(null)\r\n      setUserError(null)\r\n    }, 3000)\r\n  }, [userMessage, userError])\r\n\r\n  // Error handler funtion\r\n  const errorHandler = (err, info) => {\r\n    if (info === undefined || null) {\r\n      info = ''\r\n    }\r\n    if (err.response) {\r\n      setUserError({\r\n        variant: 'danger',\r\n        message: `${info} ${err.response.data.error}`,\r\n      })\r\n    } else if (err.request) {\r\n      setUserError({\r\n        variant: 'danger',\r\n        message: `${info} No response from server`,\r\n      })\r\n    } else {\r\n      setUserError({ variant: 'danger', message: err.message })\r\n    }\r\n    setUserLoading(false)\r\n  }\r\n\r\n  // -----------------------------------------------------------------\r\n  // Login user\r\n  // -----------------------------------------------------------------\r\n  const login = async (email, password) => {\r\n    try {\r\n      setUserLoading(true)\r\n      const { data } = await axios.post(`api/users/login`, {\r\n        email,\r\n        password,\r\n      })\r\n      localStorage.setItem('userInfo', JSON.stringify(data.user))\r\n      localStorage.setItem('userToken', JSON.stringify(data.token))\r\n      setUser(data.user)\r\n      setUserError(null)\r\n      setUserLoading(false)\r\n      setUserMessage({ variant: 'success', message: 'Đăng nhập thành công' })\r\n      navigate('/')\r\n      //   history.push('/')\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  // -----------------------------------------------------------------\r\n  // Signup a new user\r\n  // -----------------------------------------------------------------\r\n  const signup = async (name, email, password) => {\r\n    try {\r\n      const body = clean({ name, email, password })\r\n      setUserLoading(true)\r\n      const { data } = await axios.post(`api/users/register`, body)\r\n      localStorage.setItem('userInfo', JSON.stringify(data.user))\r\n      localStorage.setItem('userToken', JSON.stringify(data.token))\r\n      setUser(data.user)\r\n      setUserError(null)\r\n      setUserLoading(false)\r\n      setUserMessage({ variant: 'success', message: 'Đăng ký thành công' })\r\n      navigate('/')\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  // -----------------------------------------------------------------\r\n  // Logout a user\r\n  // -----------------------------------------------------------------\r\n  const logout = async () => {\r\n    try {\r\n      setUserLoading(true)\r\n      // await axios.post(`api/users/logout`, null, {\r\n      //   headers,\r\n      // })\r\n      localStorage.removeItem('userInfo')\r\n      localStorage.removeItem('userToken')\r\n      localStorage.removeItem('react-use-cart')\r\n      setUser(null)\r\n      setUserError(null)\r\n      setUserLoading(false)\r\n      setUserMessage({ variant: 'dark', message: 'Bạn đã đăng xuất!' })\r\n      navigate('/login')\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  // -----------------------------------------------------------------\r\n  // Read user profile\r\n  // -----------------------------------------------------------------\r\n  const readProfile = async () => {\r\n    try {\r\n      setUserLoading(true)\r\n      const { data } = await axios.get('api/users/profile', { headers })\r\n      setUserError(null)\r\n      setUserLoading(false)\r\n      return data\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  // -----------------------------------------------------------------\r\n  // Edit Profile\r\n  // -----------------------------------------------------------------\r\n  const editProfile = async (name, email) => {\r\n    try {\r\n      setUserLoading(true)\r\n      const body = clean({ name, email })\r\n      const { data } = await axios.patch('api/users/profile', body, { headers })\r\n      setUser(data.user)\r\n      localStorage.setItem('userInfo', JSON.stringify(data.user))\r\n      setUserError(null)\r\n      setUserLoading(false)\r\n      setUserMessage({\r\n        variant: 'success',\r\n        message: 'Hồ sơ của bạn đã được cập nhật thành công',\r\n      })\r\n      return data\r\n    } catch (err) {\r\n      errorHandler(err, 'Không thể cập nhật hồ sơ của bạn!')\r\n    }\r\n  }\r\n\r\n  // -----------------------------------------------------------------\r\n  // Get all users\r\n  // -----------------------------------------------------------------\r\n  const getAllUsers = async () => {\r\n    try {\r\n      setUserLoading(true)\r\n      const { data } = await axios.get('/api/users/getAll', { headers })\r\n      setAllUsers(data.users)\r\n      setUserError(null)\r\n      setUserLoading(false)\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  // -----------------------------------------------------------------\r\n  // Delete Profile\r\n  // -----------------------------------------------------------------\r\n  const deleteProfile = async () => {\r\n    try {\r\n      setUserLoading(false)\r\n      await axios.delete('api/users/me', { headers })\r\n      localStorage.removeItem('userInfo')\r\n      setUser(null)\r\n      setUserError(null)\r\n      setUserLoading(false)\r\n      setUserMessage({ variant: 'danger', message: 'Profile deleted' })\r\n      navigate('/login')\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n  const getOneUserAdmin = async id => {\r\n    try {\r\n      setUserLoading(true)\r\n      const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      }\r\n      const { data } = await axios.get(`/api/users/admin/user/${id}`, {\r\n        headers,\r\n      })\r\n      setUserLoading(false)\r\n      setUserError(null)\r\n      return data.user\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n  const forgotPassword = async (payload) => {\r\n    try {\r\n      setUserLoading(true)\r\n      const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n\r\n      const { data } = await axios.post(\"/api/users/password/forgot\", {\r\n        email: payload.email\r\n      },\r\n        config\r\n      );\r\n      console.log(\"data\", data);\r\n      setUserLoading(false)\r\n      setUserError(null)\r\n      return data.user;\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (token, payload) => {\r\n    try {\r\n      setUserLoading(true)\r\n\r\n      const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/users/password/reset/${token}`,\r\n        {\r\n          password: payload.password,\r\n          confirmPassword: payload.confirmPassword,\r\n        },\r\n        config\r\n      );\r\n      console.log(\"data\", data);\r\n\r\n      setUserLoading(false)\r\n      setUserError(null)\r\n      return data.user;\r\n\r\n    } catch (err) {\r\n      errorHandler(err)\r\n\r\n    }\r\n  };\r\n\r\n  const updatePassword = async (payload) => {\r\n    try {\r\n      // setUserLoading(true)\r\n      console.log(\"payload\", payload);\r\n      // const headers = {\r\n      //   Authorization: `Bearer ${userToken && userToken}`,\r\n      //   \"Content-Type\": \"application/json\",\r\n      // };\r\n\r\n      // const res = await fetch(\r\n      //   `/api/users/profile/updatepassword`,\r\n      //   {\r\n      //     oldPassword: payload.oldPassword,\r\n      //     newPassword: payload.newPassword,\r\n      //     confirmPassword: payload.confirmPassword,\r\n      //   },\r\n      //   config\r\n      // );\r\n      const res = await fetch(`/api/users/profile/updatepassword`, {\r\n        method: \"PATCH\",\r\n        headers,\r\n        body: JSON.stringify({\r\n          oldPassword: payload.oldPassword,\r\n          newPassword: payload.newPassword,\r\n          confirmPassword: payload.confirmPassword,\r\n        }),\r\n      });\r\n      console.log(\"data\", res);\r\n      // setUserLoading(false)\r\n      // setUserError(null)\r\n      // return data.user;\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={ {\r\n        user,\r\n        userError,\r\n        userLoading,\r\n        userMessage,\r\n        allUsers,\r\n        login,\r\n        signup,\r\n        logout,\r\n        readProfile,\r\n        editProfile,\r\n        getAllUsers,\r\n        deleteProfile,\r\n        getOneUserAdmin,\r\n        forgotPassword,\r\n        resetPassword,\r\n        updatePassword\r\n      } }>\r\n      { props.children }\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n// -----------------------------------------\r\n//  Get One user admin\r\n//   ---------------------------------------\r\n\r\n\r\nexport default UserState\r\n"]},"metadata":{},"sourceType":"module"}