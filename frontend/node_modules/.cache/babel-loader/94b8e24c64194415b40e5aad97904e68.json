{"ast":null,"code":"var _jsxFileName = \"D:\\\\D\\u1EF1 \\xC1n T\\u1ED1t Nghi\\u1EC7p\\\\duantotnghiep_test\\\\frontend\\\\src\\\\context\\\\product\\\\ProductState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ProductContext from './productContext';\nimport axios from 'axios'; // Function for cleaning null, undefined and empty strings values in objects\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction clean(obj) {\n  for (var propName in obj) {\n    if (obj[propName] === null || obj[propName] === undefined || obj[propName] === '') {\n      delete obj[propName];\n    }\n  }\n\n  return obj;\n} // ------------------------------------------\n// Product State\n// ------------------------------------------\n\n\nconst ProductState = props => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [productsError, setProductsError] = useState(null);\n  const [productsLoading, setProductsLoading] = useState(false);\n  const [productsMessage, setProductsMessage] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      setProductsError(null);\n      setProductsMessage(null);\n    }, 3000);\n  }, [productsError, productsMessage]); // Error Handler function\n\n  const errorHandler = (err, info) => {\n    if (err.response) {\n      setProductsError({\n        variant: 'danger',\n        message: `${info}, ${err.response.data.error}`\n      });\n    } else if (err.request) {\n      setProductsError({\n        variant: 'danger',\n        message: `${info},  No response from server!`\n      });\n    } else {\n      setProductsError({\n        variant: 'danger',\n        message: err.message\n      });\n    }\n\n    setProductsLoading(false);\n  }; // get all Products\n\n\n  const getProducts = async (limit, skip, keyword, category) => {\n    try {\n      setProductsLoading(true);\n      const {\n        data\n      } = await axios.get(`/api/products/getAll`, {\n        params: {\n          limit,\n          skip,\n          keyword,\n          category\n        }\n      });\n      setProducts(data.products);\n      setProductsLoading(false);\n      setProductsError(null);\n      return data.totalResults;\n    } catch (err) {\n      errorHandler(err, 'could not get products');\n    }\n  }; // Add new product\n\n\n  const addProduct = async fromData => {\n    const productBody = clean(fromData);\n    console.log(productBody, ' productBody');\n\n    try {\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`,\n        'Content-Type': 'multipart/form-data'\n      };\n      setProductsLoading(true);\n      await axios.post('api/products/add', productBody, {\n        headers\n      }); // setProducts([productBody, ...products])\n\n      setProductsMessage({\n        variant: 'success',\n        message: 'Product added successfully!'\n      });\n      setProductsLoading(false);\n      setProductsError(null);\n    } catch (err) {\n      errorHandler(err, 'Could not add product');\n    }\n  }; // get one product\n\n\n  const getOneProduct = async id => {\n    try {\n      setProductsLoading(true);\n      const {\n        data\n      } = await axios.get(`/api/products/${id}`);\n      setProductsLoading(false);\n      setProductsError(null);\n      return data.product;\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // Update prdouct details\n\n\n  const updateProductDetails = async (id, name, sku, category, price, description) => {\n    try {\n      setProductsLoading(true);\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      const productBody = clean({\n        name,\n        sku,\n        category,\n        price,\n        description\n      });\n      await axios.patch(`/api/products/${id}`, productBody, {\n        headers\n      });\n      setProductsMessage({\n        variant: 'success',\n        message: 'Product details updated!'\n      });\n      setProductsLoading(false);\n      setProductsError(null); // getCategories()\n    } catch (err) {\n      errorHandler(err, 'could not update product details');\n    }\n  }; // Delete prdouct Image\n\n\n  const deleteProduct = async (id, name, sku, category, price, description) => {\n    try {\n      setProductsLoading(true);\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      const productBody = clean({\n        name,\n        sku,\n        category,\n        price,\n        description\n      });\n      await axios.patch(`/api/products/${id}`, productBody, {\n        headers\n      });\n      setProductsMessage({\n        variant: 'success',\n        message: 'Product details delete!'\n      });\n      setProductsLoading(false);\n      setProductsError(null); // getCategories()\n    } catch (err) {\n      errorHandler(err, 'could not delete product details');\n    }\n  }; // Update prdouct Image\n\n\n  const updateProductImage = async (id, formData) => {\n    try {\n      setProductsLoading(true);\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`,\n        'Content-Type': 'multipart/form-data'\n      };\n      const {\n        data\n      } = await axios.patch(`api/products/${id}/updateImage`, formData, {\n        headers\n      });\n      setProductsMessage({\n        variant: 'success',\n        message: 'Product Image updated!'\n      });\n      setProductsLoading(false);\n      setProductsError(null);\n      return data.image;\n    } catch (err) {\n      errorHandler(err, 'Could not update image');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      products,\n      productsError,\n      productsLoading,\n      productsMessage,\n      addProduct,\n      getProducts,\n      getOneProduct,\n      updateProductDetails,\n      updateProductImage,\n      deleteProduct,\n      errorHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductState, \"dEPufNQ41KkpzXqY5zzw5dCluHM=\");\n\n_c = ProductState;\nexport default ProductState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductState\");","map":{"version":3,"sources":["D:/Dự Án Tốt Nghiệp/duantotnghiep_test/frontend/src/context/product/ProductState.js"],"names":["React","useEffect","useState","ProductContext","axios","clean","obj","propName","undefined","ProductState","props","products","setProducts","productsError","setProductsError","productsLoading","setProductsLoading","productsMessage","setProductsMessage","setTimeout","errorHandler","err","info","response","variant","message","data","error","request","getProducts","limit","skip","keyword","category","get","params","totalResults","addProduct","fromData","productBody","console","log","userToken","JSON","parse","localStorage","getItem","headers","Authorization","post","getOneProduct","id","product","updateProductDetails","name","sku","price","description","patch","deleteProduct","updateProductImage","formData","image","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ProductContext from './productContext'\r\nimport axios from 'axios'\r\n\r\n// Function for cleaning null, undefined and empty strings values in objects\r\nfunction clean(obj) {\r\n  for (var propName in obj) {\r\n    if (\r\n      obj[propName] === null ||\r\n      obj[propName] === undefined ||\r\n      obj[propName] === ''\r\n    ) {\r\n      delete obj[propName]\r\n    }\r\n  }\r\n  return obj\r\n}\r\n\r\n// ------------------------------------------\r\n// Product State\r\n// ------------------------------------------\r\nconst ProductState = props => {\r\n  const [products, setProducts] = useState([])\r\n  const [productsError, setProductsError] = useState(null)\r\n  const [productsLoading, setProductsLoading] = useState(false)\r\n  const [productsMessage, setProductsMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setProductsError(null)\r\n      setProductsMessage(null)\r\n    }, 3000)\r\n  }, [productsError, productsMessage])\r\n\r\n  // Error Handler function\r\n  const errorHandler = (err, info) => {\r\n    if (err.response) {\r\n      setProductsError({\r\n        variant: 'danger',\r\n        message: `${info}, ${err.response.data.error}`,\r\n      })\r\n    } else if (err.request) {\r\n      setProductsError({\r\n        variant: 'danger',\r\n        message: `${info},  No response from server!`,\r\n      })\r\n    } else {\r\n      setProductsError({ variant: 'danger', message: err.message })\r\n    }\r\n    setProductsLoading(false)\r\n  }\r\n\r\n  // get all Products\r\n  const getProducts = async (limit, skip, keyword, category) => {\r\n    try {\r\n      setProductsLoading(true)\r\n      const { data } = await axios.get(`/api/products/getAll`, {\r\n        params: { limit, skip, keyword, category },\r\n      })\r\n      setProducts(data.products)\r\n      setProductsLoading(false)\r\n      setProductsError(null)\r\n      return data.totalResults\r\n    } catch (err) {\r\n      errorHandler(err, 'could not get products')\r\n    }\r\n  }\r\n\r\n  // Add new product\r\n  const addProduct = async fromData => {\r\n    const productBody = clean(fromData)\r\n    console.log(productBody, ' productBody')\r\n    try {\r\n      const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      }\r\n      setProductsLoading(true)\r\n      await axios.post('api/products/add', productBody, { headers })\r\n      // setProducts([productBody, ...products])\r\n      setProductsMessage({\r\n        variant: 'success',\r\n        message: 'Product added successfully!',\r\n      })\r\n      setProductsLoading(false)\r\n      setProductsError(null)\r\n    } catch (err) {\r\n      errorHandler(err, 'Could not add product')\r\n    }\r\n  }\r\n\r\n  // get one product\r\n  const getOneProduct = async id => {\r\n    try {\r\n      setProductsLoading(true)\r\n      const { data } = await axios.get(`/api/products/${id}`)\r\n      setProductsLoading(false)\r\n      setProductsError(null)\r\n      return data.product\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  // Update prdouct details\r\n  const updateProductDetails = async (\r\n    id,\r\n    name,\r\n    sku,\r\n    category,\r\n    price,\r\n    description\r\n  ) => {\r\n    try {\r\n      setProductsLoading(true)\r\n      const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      }\r\n      const productBody = clean({\r\n        name,\r\n        sku,\r\n        category,\r\n        price,\r\n        description,\r\n      })\r\n      await axios.patch(`/api/products/${id}`, productBody, { headers })\r\n      setProductsMessage({\r\n        variant: 'success',\r\n        message: 'Product details updated!',\r\n      })\r\n      setProductsLoading(false)\r\n      setProductsError(null)\r\n      // getCategories()\r\n    } catch (err) {\r\n      errorHandler(err, 'could not update product details')\r\n    }\r\n  }\r\n  // Delete prdouct Image\r\n  const deleteProduct = async (\r\n    id,\r\n    name,\r\n    sku,\r\n    category,\r\n    price,\r\n    description\r\n  ) => {\r\n    try {\r\n      setProductsLoading(true)\r\n      const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      }\r\n      const productBody = clean({\r\n        name,\r\n        sku,\r\n        category,\r\n        price,\r\n        description,\r\n      })\r\n      await axios.patch(`/api/products/${id}`, productBody, { headers })\r\n      setProductsMessage({\r\n        variant: 'success',\r\n        message: 'Product details delete!',\r\n      })\r\n      setProductsLoading(false)\r\n      setProductsError(null)\r\n      // getCategories()\r\n    } catch (err) {\r\n      errorHandler(err, 'could not delete product details')\r\n    }\r\n  }\r\n\r\n  // Update prdouct Image\r\n  const updateProductImage = async (id, formData) => {\r\n    try {\r\n      setProductsLoading(true)\r\n      const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n        'Content-Type': 'multipart/form-data',\r\n      }\r\n      const { data } = await axios.patch(\r\n        `api/products/${id}/updateImage`,\r\n        formData,\r\n        { headers }\r\n      )\r\n      setProductsMessage({\r\n        variant: 'success',\r\n        message: 'Product Image updated!',\r\n      })\r\n      setProductsLoading(false)\r\n      setProductsError(null)\r\n      return data.image\r\n    } catch (err) {\r\n      errorHandler(err, 'Could not update image')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={ {\r\n        products,\r\n        productsError,\r\n        productsLoading,\r\n        productsMessage,\r\n        addProduct,\r\n        getProducts,\r\n        getOneProduct,\r\n        updateProductDetails,\r\n        updateProductImage,\r\n        deleteProduct,\r\n        errorHandler,\r\n      } }>\r\n      { props.children }\r\n    </ProductContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ProductState\r\n"]},"metadata":{},"sourceType":"module"}