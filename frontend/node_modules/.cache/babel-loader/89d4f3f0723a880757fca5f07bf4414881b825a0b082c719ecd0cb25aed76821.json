{"ast":null,"code":"import { exportImage, geometry, Group, MultiPath, Path, Image, Surface } from '@progress/kendo-drawing';\nimport { elementOffset, limitValue } from '../common';\nvar Point = geometry.Point,\n  Rect = geometry.Rect,\n  transform = geometry.transform;\nvar noop = function noop() {};\nvar DECIMAL_DIGITS = 3;\nvar DEFAULT_COLOR = '#000';\nvar DEFAULT_BACKGROUND_COLOR = '#fff';\nvar DEFAULT_PRECISION = 1;\nvar DEFAULT_SAMPLING_RATE = 200; // Updates per second\nvar DEFAULT_STROKE_WIDTH = 1;\nvar DEFAULT_WIDTH = 750;\nvar DEFAULT_HEIGHT = 250;\nvar DEFAULT_SCALE = 1;\n// Export images at maximized scale (3x) and 2x pixel density to cover HiDPI screens.\nvar DEFAULT_EXPORT_SCALE = 6;\nvar SignaturePad = /** @class */function () {\n  function SignaturePad(element, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.element = element;\n    this.lastMoveTime = 0;\n    this.options = Object.assign({\n      scale: DEFAULT_SCALE,\n      precision: DEFAULT_PRECISION,\n      samplingRate: DEFAULT_SAMPLING_RATE,\n      smooth: options.smooth !== false,\n      color: options.color || DEFAULT_COLOR,\n      backgroundColor: options.backgroundColor || DEFAULT_BACKGROUND_COLOR,\n      strokeWidth: DEFAULT_STROKE_WIDTH,\n      onChange: noop,\n      onDraw: noop,\n      onDrawEnd: noop\n    }, options);\n    this.pathOptions = {\n      stroke: {\n        color: this.options.color,\n        width: this.options.strokeWidth,\n        lineCap: 'round',\n        lineJoin: 'round'\n      }\n    };\n    this.initSurface();\n    this.attachEvents();\n  }\n  SignaturePad.prototype.destroy = function () {\n    this.detachEvents();\n  };\n  SignaturePad.prototype.clear = function () {\n    this.rootGroup.clear();\n    this.path = null;\n  };\n  Object.defineProperty(SignaturePad.prototype, \"isDrawing\", {\n    get: function get() {\n      return Boolean(this.points);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SignaturePad.prototype, \"pathData\", {\n    get: function get() {\n      var _a;\n      return (_a = this.path) === null || _a === void 0 ? void 0 : _a.toString(DECIMAL_DIGITS);\n    },\n    set: function set(value) {\n      this.clear();\n      this.path = MultiPath.parse(value, this.pathOptions);\n      this.rootGroup.append(this.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  SignaturePad.prototype.loadImage = function (data, size) {\n    if (size === void 0) {\n      size = [];\n    }\n    if (!data) {\n      this.clear();\n      return;\n    }\n    var _a = this.size,\n      width = _a[0],\n      height = _a[1];\n    var contentWidth = width / this.options.scale;\n    var contentHeight = height / this.options.scale;\n    var importWidth = size[0] || contentWidth * DEFAULT_EXPORT_SCALE;\n    var importHeight = size[1] || contentHeight * DEFAULT_EXPORT_SCALE;\n    var scaleX = contentWidth / importWidth;\n    var scaleY = contentHeight / importHeight;\n    var scale = Math.min(scaleX, scaleY);\n    var img = new Image(data, new geometry.Rect([0, 0], [importWidth, importHeight]));\n    img.transform(transform().scale(scale, scale));\n    this.clear();\n    this.rootGroup.append(img);\n  };\n  SignaturePad.prototype.exportImage = function (options) {\n    var _a;\n    var _b = this.size,\n      width = _b[0],\n      height = _b[1];\n    var contentWidth = width / this.options.scale;\n    var contentHeight = height / this.options.scale;\n    var exportWidth = (options === null || options === void 0 ? void 0 : options.width) || contentWidth * DEFAULT_EXPORT_SCALE;\n    var exportHeight = (options === null || options === void 0 ? void 0 : options.height) || contentHeight * DEFAULT_EXPORT_SCALE;\n    var scaleX = exportWidth / contentWidth;\n    var scaleY = exportHeight / contentHeight;\n    var scale = Math.min(scaleX, scaleY);\n    var exportRect = new Rect([0, 0], [exportWidth, exportHeight]);\n    var exportGroup = new Group({\n      clip: Path.fromRect(exportRect)\n    });\n    var contentGroup = new Group({\n      transform: transform().scale(scale, scale)\n    });\n    var frame = Path.fromRect(exportRect, {\n      fill: {\n        color: this.options.backgroundColor\n      }\n    });\n    exportGroup.append(frame);\n    exportGroup.append(contentGroup);\n    (_a = contentGroup.children).push.apply(_a, this.rootGroup.children);\n    return exportImage(exportGroup, Object.assign({\n      width: exportWidth,\n      height: exportHeight\n    }, options));\n  };\n  SignaturePad.prototype.resize = function () {\n    this.surface.resize(true);\n  };\n  SignaturePad.prototype.setOptions = function (options) {\n    Object.assign(this.options, options);\n    this.pathOptions.stroke.color = this.options.color;\n    this.pathOptions.stroke.width = this.options.strokeWidth;\n    if (this.path) {\n      this.path.options.set('stroke.color', this.options.color);\n      this.path.options.set('stroke.width', this.options.strokeWidth);\n    }\n    this.background.options.set('fill.color', this.options.backgroundColor);\n  };\n  SignaturePad.prototype.initSurface = function () {\n    this.surface = Surface.create(this.element, {\n      type: 'canvas'\n    });\n    this.element.style.touchAction = 'none';\n    var scale = this.options.scale;\n    this.rootGroup = new Group({\n      transform: transform().scale(scale, scale)\n    });\n    // The signature is not resizable, store initial dimensions.\n    var width = this.element.offsetWidth || DEFAULT_WIDTH;\n    var height = this.element.offsetHeight || DEFAULT_HEIGHT;\n    this.size = [width, height];\n    this.background = Path.fromRect(new Rect([0, 0], this.size), {\n      fill: {\n        color: this.options.backgroundColor\n      }\n    });\n    this.surface.draw(this.background);\n    this.surface.draw(this.rootGroup);\n  };\n  SignaturePad.prototype.attachEvents = function () {\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.onPointerUp = this.onPointerUp.bind(this);\n    this.element.addEventListener('pointerdown', this.onPointerDown);\n    this.element.addEventListener('pointermove', this.onPointerMove);\n    this.element.addEventListener('pointerup', this.onPointerUp);\n  };\n  SignaturePad.prototype.detachEvents = function () {\n    this.element.removeEventListener('pointerdown', this.onPointerDown);\n    this.element.removeEventListener('pointermove', this.onPointerMove);\n    this.element.removeEventListener('pointerup', this.onPointerUp);\n  };\n  SignaturePad.prototype.touchPoint = function (e) {\n    var offset = elementOffset(this.element);\n    var pageX = e.pageX;\n    var pageY = e.pageY;\n    var scale = 1 / this.options.scale;\n    return new Point(pageX - offset.left, pageY - offset.top).scale(scale, scale);\n  };\n  SignaturePad.prototype.onPointerDown = function (e) {\n    if (this.options.readonly || !e.isPrimary || !isMainButton(e)) {\n      return;\n    }\n    if (!this.path) {\n      this.path = new MultiPath(this.pathOptions);\n      this.rootGroup.append(this.path);\n    }\n    this.options.onDraw();\n    this.element.setPointerCapture(e.pointerId);\n    var point = this.touchPoint(e);\n    this.points = [point];\n    this.path.moveTo(point);\n  };\n  SignaturePad.prototype.onPointerMove = function (e) {\n    if (!this.points || !e.isPrimary) {\n      return;\n    }\n    var now = new Date().getTime();\n    var elapsed = now - this.lastMoveTime;\n    var minTimeDelta = 1000 / limitValue(this.options.samplingRate, 1, 10000);\n    if (elapsed < minTimeDelta) {\n      return;\n    } else {\n      this.lastMoveTime = now;\n    }\n    var point = this.touchPoint(e);\n    var lastPoint = this.points[this.points.length - 1];\n    var minDelta = 1 / limitValue(this.options.precision, 0.01, 100);\n    if (point.distanceTo(lastPoint) < minDelta) {\n      return;\n    }\n    this.points.push(point);\n    this.path.lineTo(point);\n  };\n  SignaturePad.prototype.onPointerUp = function (e) {\n    if (!e.isPrimary || !this.path || !this.points || this.options.readonly) {\n      return;\n    }\n    if (this.options.smooth) {\n      var segments = Path.curveFromPoints(this.points);\n      this.path.paths.splice(this.path.paths.length - 1, 1, segments);\n    }\n    this.points = null;\n    this.options.onDrawEnd();\n    this.options.onChange(this.pathData);\n  };\n  return SignaturePad;\n}();\nexport { SignaturePad };\nfunction isMainButton(e) {\n  return typeof e.button !== 'number' || e.button === 0;\n}","map":{"version":3,"names":["exportImage","geometry","Group","MultiPath","Path","Image","Surface","elementOffset","limitValue","Point","Rect","transform","noop","DECIMAL_DIGITS","DEFAULT_COLOR","DEFAULT_BACKGROUND_COLOR","DEFAULT_PRECISION","DEFAULT_SAMPLING_RATE","DEFAULT_STROKE_WIDTH","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_SCALE","DEFAULT_EXPORT_SCALE","SignaturePad","element","options","lastMoveTime","Object","assign","scale","precision","samplingRate","smooth","color","backgroundColor","strokeWidth","onChange","onDraw","onDrawEnd","pathOptions","stroke","width","lineCap","lineJoin","initSurface","attachEvents","prototype","destroy","detachEvents","clear","rootGroup","path","defineProperty","get","Boolean","points","enumerable","configurable","_a","toString","set","value","parse","append","loadImage","data","size","height","contentWidth","contentHeight","importWidth","importHeight","scaleX","scaleY","Math","min","img","_b","exportWidth","exportHeight","exportRect","exportGroup","clip","fromRect","contentGroup","frame","fill","children","push","apply","resize","surface","setOptions","background","create","type","style","touchAction","offsetWidth","offsetHeight","draw","onPointerDown","bind","onPointerMove","onPointerUp","addEventListener","removeEventListener","touchPoint","e","offset","pageX","pageY","left","top","readonly","isPrimary","isMainButton","setPointerCapture","pointerId","point","moveTo","now","Date","getTime","elapsed","minTimeDelta","lastPoint","length","minDelta","distanceTo","lineTo","segments","curveFromPoints","paths","splice","pathData","button"],"sources":["D:/Dự Án Tốt Nghiệp/duantotnghiep_test/frontend/node_modules/@progress/kendo-inputs-common/dist/es/signature/signature-pad.js"],"sourcesContent":["import { exportImage, geometry, Group, MultiPath, Path, Image, Surface, } from '@progress/kendo-drawing';\nimport { elementOffset, limitValue } from '../common';\nvar Point = geometry.Point, Rect = geometry.Rect, transform = geometry.transform;\nvar noop = function () { };\nvar DECIMAL_DIGITS = 3;\nvar DEFAULT_COLOR = '#000';\nvar DEFAULT_BACKGROUND_COLOR = '#fff';\nvar DEFAULT_PRECISION = 1;\nvar DEFAULT_SAMPLING_RATE = 200; // Updates per second\nvar DEFAULT_STROKE_WIDTH = 1;\nvar DEFAULT_WIDTH = 750;\nvar DEFAULT_HEIGHT = 250;\nvar DEFAULT_SCALE = 1;\n// Export images at maximized scale (3x) and 2x pixel density to cover HiDPI screens.\nvar DEFAULT_EXPORT_SCALE = 6;\nvar SignaturePad = /** @class */ (function () {\n    function SignaturePad(element, options) {\n        if (options === void 0) { options = {}; }\n        this.element = element;\n        this.lastMoveTime = 0;\n        this.options = Object.assign({\n            scale: DEFAULT_SCALE,\n            precision: DEFAULT_PRECISION,\n            samplingRate: DEFAULT_SAMPLING_RATE,\n            smooth: options.smooth !== false,\n            color: options.color || DEFAULT_COLOR,\n            backgroundColor: options.backgroundColor || DEFAULT_BACKGROUND_COLOR,\n            strokeWidth: DEFAULT_STROKE_WIDTH,\n            onChange: noop,\n            onDraw: noop,\n            onDrawEnd: noop\n        }, options);\n        this.pathOptions = {\n            stroke: {\n                color: this.options.color,\n                width: this.options.strokeWidth,\n                lineCap: 'round',\n                lineJoin: 'round'\n            }\n        };\n        this.initSurface();\n        this.attachEvents();\n    }\n    SignaturePad.prototype.destroy = function () {\n        this.detachEvents();\n    };\n    SignaturePad.prototype.clear = function () {\n        this.rootGroup.clear();\n        this.path = null;\n    };\n    Object.defineProperty(SignaturePad.prototype, \"isDrawing\", {\n        get: function () {\n            return Boolean(this.points);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SignaturePad.prototype, \"pathData\", {\n        get: function () {\n            var _a;\n            return (_a = this.path) === null || _a === void 0 ? void 0 : _a.toString(DECIMAL_DIGITS);\n        },\n        set: function (value) {\n            this.clear();\n            this.path = MultiPath.parse(value, this.pathOptions);\n            this.rootGroup.append(this.path);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SignaturePad.prototype.loadImage = function (data, size) {\n        if (size === void 0) { size = []; }\n        if (!data) {\n            this.clear();\n            return;\n        }\n        var _a = this.size, width = _a[0], height = _a[1];\n        var contentWidth = width / this.options.scale;\n        var contentHeight = height / this.options.scale;\n        var importWidth = size[0] || contentWidth * DEFAULT_EXPORT_SCALE;\n        var importHeight = size[1] || contentHeight * DEFAULT_EXPORT_SCALE;\n        var scaleX = contentWidth / importWidth;\n        var scaleY = contentHeight / importHeight;\n        var scale = Math.min(scaleX, scaleY);\n        var img = new Image(data, new geometry.Rect([0, 0], [importWidth, importHeight]));\n        img.transform(transform().scale(scale, scale));\n        this.clear();\n        this.rootGroup.append(img);\n    };\n    SignaturePad.prototype.exportImage = function (options) {\n        var _a;\n        var _b = this.size, width = _b[0], height = _b[1];\n        var contentWidth = width / this.options.scale;\n        var contentHeight = height / this.options.scale;\n        var exportWidth = (options === null || options === void 0 ? void 0 : options.width) || contentWidth * DEFAULT_EXPORT_SCALE;\n        var exportHeight = (options === null || options === void 0 ? void 0 : options.height) || contentHeight * DEFAULT_EXPORT_SCALE;\n        var scaleX = exportWidth / contentWidth;\n        var scaleY = exportHeight / contentHeight;\n        var scale = Math.min(scaleX, scaleY);\n        var exportRect = new Rect([0, 0], [exportWidth, exportHeight]);\n        var exportGroup = new Group({\n            clip: Path.fromRect(exportRect)\n        });\n        var contentGroup = new Group({\n            transform: transform().scale(scale, scale)\n        });\n        var frame = Path.fromRect(exportRect, {\n            fill: {\n                color: this.options.backgroundColor\n            }\n        });\n        exportGroup.append(frame);\n        exportGroup.append(contentGroup);\n        (_a = contentGroup.children).push.apply(_a, this.rootGroup.children);\n        return exportImage(exportGroup, Object.assign({\n            width: exportWidth,\n            height: exportHeight\n        }, options));\n    };\n    SignaturePad.prototype.resize = function () {\n        this.surface.resize(true);\n    };\n    SignaturePad.prototype.setOptions = function (options) {\n        Object.assign(this.options, options);\n        this.pathOptions.stroke.color = this.options.color;\n        this.pathOptions.stroke.width = this.options.strokeWidth;\n        if (this.path) {\n            this.path.options.set('stroke.color', this.options.color);\n            this.path.options.set('stroke.width', this.options.strokeWidth);\n        }\n        this.background.options.set('fill.color', this.options.backgroundColor);\n    };\n    SignaturePad.prototype.initSurface = function () {\n        this.surface = Surface.create(this.element, { type: 'canvas' });\n        this.element.style.touchAction = 'none';\n        var scale = this.options.scale;\n        this.rootGroup = new Group({\n            transform: transform().scale(scale, scale)\n        });\n        // The signature is not resizable, store initial dimensions.\n        var width = this.element.offsetWidth || DEFAULT_WIDTH;\n        var height = this.element.offsetHeight || DEFAULT_HEIGHT;\n        this.size = [width, height];\n        this.background = Path.fromRect(new Rect([0, 0], this.size), {\n            fill: {\n                color: this.options.backgroundColor\n            }\n        });\n        this.surface.draw(this.background);\n        this.surface.draw(this.rootGroup);\n    };\n    SignaturePad.prototype.attachEvents = function () {\n        this.onPointerDown = this.onPointerDown.bind(this);\n        this.onPointerMove = this.onPointerMove.bind(this);\n        this.onPointerUp = this.onPointerUp.bind(this);\n        this.element.addEventListener('pointerdown', this.onPointerDown);\n        this.element.addEventListener('pointermove', this.onPointerMove);\n        this.element.addEventListener('pointerup', this.onPointerUp);\n    };\n    SignaturePad.prototype.detachEvents = function () {\n        this.element.removeEventListener('pointerdown', this.onPointerDown);\n        this.element.removeEventListener('pointermove', this.onPointerMove);\n        this.element.removeEventListener('pointerup', this.onPointerUp);\n    };\n    SignaturePad.prototype.touchPoint = function (e) {\n        var offset = elementOffset(this.element);\n        var pageX = e.pageX;\n        var pageY = e.pageY;\n        var scale = 1 / this.options.scale;\n        return new Point(pageX - offset.left, pageY - offset.top).scale(scale, scale);\n    };\n    SignaturePad.prototype.onPointerDown = function (e) {\n        if (this.options.readonly || !e.isPrimary || !isMainButton(e)) {\n            return;\n        }\n        if (!this.path) {\n            this.path = new MultiPath(this.pathOptions);\n            this.rootGroup.append(this.path);\n        }\n        this.options.onDraw();\n        this.element.setPointerCapture(e.pointerId);\n        var point = this.touchPoint(e);\n        this.points = [point];\n        this.path.moveTo(point);\n    };\n    SignaturePad.prototype.onPointerMove = function (e) {\n        if (!this.points || !e.isPrimary) {\n            return;\n        }\n        var now = (new Date()).getTime();\n        var elapsed = now - this.lastMoveTime;\n        var minTimeDelta = 1000 / limitValue(this.options.samplingRate, 1, 10000);\n        if (elapsed < minTimeDelta) {\n            return;\n        }\n        else {\n            this.lastMoveTime = now;\n        }\n        var point = this.touchPoint(e);\n        var lastPoint = this.points[this.points.length - 1];\n        var minDelta = 1 / limitValue(this.options.precision, 0.01, 100);\n        if (point.distanceTo(lastPoint) < minDelta) {\n            return;\n        }\n        this.points.push(point);\n        this.path.lineTo(point);\n    };\n    SignaturePad.prototype.onPointerUp = function (e) {\n        if (!e.isPrimary || !this.path || !this.points || this.options.readonly) {\n            return;\n        }\n        if (this.options.smooth) {\n            var segments = Path.curveFromPoints(this.points);\n            this.path.paths.splice(this.path.paths.length - 1, 1, segments);\n        }\n        this.points = null;\n        this.options.onDrawEnd();\n        this.options.onChange(this.pathData);\n    };\n    return SignaturePad;\n}());\nexport { SignaturePad };\nfunction isMainButton(e) {\n    return typeof (e.button) !== 'number' || e.button === 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}