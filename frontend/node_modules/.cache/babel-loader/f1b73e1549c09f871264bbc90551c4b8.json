{"ast":null,"code":"import { useState, useContext, useReducer, useEffect, createElement, createContext } from 'react';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction useLocalStorage(key, initialValue) {\n  var _React$useState = useState(function () {\n      try {\n        var item = typeof window !== \"undefined\" && window.localStorage.getItem(key);\n        return item ? item : initialValue;\n      } catch (error) {\n        return initialValue;\n      }\n    }),\n    storedValue = _React$useState[0],\n    setStoredValue = _React$useState[1];\n  var setValue = function setValue(value) {\n    try {\n      var valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\nvar initialState = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {}\n};\nvar CartContext = /*#__PURE__*/createContext(initialState);\nvar createCartIdentifier = function createCartIdentifier(len) {\n  if (len === void 0) {\n    len = 12;\n  }\n  return [].concat(Array(len)).map(function () {\n    return (~~(Math.random() * 36)).toString(36);\n  }).join(\"\");\n};\nvar useCart = function useCart() {\n  var context = useContext(CartContext);\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n  return context;\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n    case \"ADD_ITEM\":\n      {\n        var items = [].concat(state.items, [action.payload]);\n        return generateCartState(state, items);\n      }\n    case \"UPDATE_ITEM\":\n      {\n        var _items = state.items.map(function (item) {\n          if (item.id !== action.id) return item;\n          return _extends({}, item, action.payload);\n        });\n        return generateCartState(state, _items);\n      }\n    case \"REMOVE_ITEM\":\n      {\n        var _items2 = state.items.filter(function (i) {\n          return i.id !== action.id;\n        });\n        return generateCartState(state, _items2);\n      }\n    case \"EMPTY_CART\":\n      return initialState;\n    case \"CLEAR_CART_META\":\n      return _extends({}, state, {\n        metadata: {}\n      });\n    case \"SET_CART_META\":\n      return _extends({}, state, {\n        metadata: _extends({}, action.payload)\n      });\n    case \"UPDATE_CART_META\":\n      return _extends({}, state, {\n        metadata: _extends({}, state.metadata, action.payload)\n      });\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\nvar generateCartState = function generateCartState(state, items) {\n  if (state === void 0) {\n    state = initialState;\n  }\n  var totalUniqueItems = calculateUniqueItems(items);\n  var isEmpty = totalUniqueItems === 0;\n  return _extends({}, initialState, state, {\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems: totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty: isEmpty\n  });\n};\nvar calculateItemTotals = function calculateItemTotals(items) {\n  return items.map(function (item) {\n    return _extends({}, item, {\n      itemTotal: item.price * item.quantity\n    });\n  });\n};\nvar calculateTotal = function calculateTotal(items) {\n  return items.reduce(function (total, item) {\n    return total + item.quantity * item.price;\n  }, 0);\n};\nvar calculateTotalItems = function calculateTotalItems(items) {\n  return items.reduce(function (sum, item) {\n    return sum + item.quantity;\n  }, 0);\n};\nvar calculateUniqueItems = function calculateUniqueItems(items) {\n  return items.length;\n};\nvar CartProvider = function CartProvider(_ref) {\n  var children = _ref.children,\n    cartId = _ref.id,\n    _ref$defaultItems = _ref.defaultItems,\n    defaultItems = _ref$defaultItems === void 0 ? [] : _ref$defaultItems,\n    onSetItems = _ref.onSetItems,\n    onItemAdd = _ref.onItemAdd,\n    onItemUpdate = _ref.onItemUpdate,\n    onItemRemove = _ref.onItemRemove,\n    _ref$storage = _ref.storage,\n    storage = _ref$storage === void 0 ? useLocalStorage : _ref$storage,\n    metadata = _ref.metadata;\n  var id = cartId ? cartId : createCartIdentifier();\n  var _storage = storage(cartId ? \"react-use-cart-\" + id : \"react-use-cart\", JSON.stringify(_extends({\n      id: id\n    }, initialState, {\n      items: defaultItems,\n      metadata: metadata\n    }))),\n    savedCart = _storage[0],\n    saveCart = _storage[1];\n  var _React$useReducer = useReducer(reducer, JSON.parse(savedCart)),\n    state = _React$useReducer[0],\n    dispatch = _React$useReducer[1];\n  useEffect(function () {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n  var setItems = function setItems(items) {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(function (item) {\n        return _extends({}, item, {\n          quantity: item.quantity || 1\n        });\n      })\n    });\n    onSetItems && onSetItems(items);\n  };\n  var addItem = function addItem(item, quantity) {\n    if (quantity === void 0) {\n      quantity = 1;\n    }\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\n    if (quantity <= 0) return;\n    var currentItem = state.items.find(function (i) {\n      return i.id === item.id;\n    });\n    if (!currentItem && !item.hasOwnProperty(\"price\")) throw new Error(\"You must pass a `price` for new items\");\n    if (!currentItem) {\n      var _payload = _extends({}, item, {\n        quantity: quantity\n      });\n      dispatch({\n        type: \"ADD_ITEM\",\n        payload: _payload\n      });\n      onItemAdd && onItemAdd(_payload);\n      return;\n    }\n    var payload = _extends({}, item, {\n      quantity: currentItem.quantity + quantity\n    });\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: item.id,\n      payload: payload\n    });\n    onItemUpdate && onItemUpdate(payload);\n  };\n  var updateItem = function updateItem(id, payload) {\n    if (!id || !payload) {\n      return;\n    }\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: id,\n      payload: payload\n    });\n    onItemUpdate && onItemUpdate(payload);\n  };\n  var updateItemQuantity = function updateItemQuantity(id, quantity) {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(id);\n      dispatch({\n        type: \"REMOVE_ITEM\",\n        id: id\n      });\n      return;\n    }\n    var currentItem = state.items.find(function (item) {\n      return item.id === id;\n    });\n    if (!currentItem) throw new Error(\"No such item to update\");\n    var payload = _extends({}, currentItem, {\n      quantity: quantity\n    });\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: id,\n      payload: payload\n    });\n    onItemUpdate && onItemUpdate(payload);\n  };\n  var removeItem = function removeItem(id) {\n    if (!id) return;\n    dispatch({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n    onItemRemove && onItemRemove(id);\n  };\n  var emptyCart = function emptyCart() {\n    return dispatch({\n      type: \"EMPTY_CART\"\n    });\n  };\n  var getItem = function getItem(id) {\n    return state.items.find(function (i) {\n      return i.id === id;\n    });\n  };\n  var inCart = function inCart(id) {\n    return state.items.some(function (i) {\n      return i.id === id;\n    });\n  };\n  var clearCartMetadata = function clearCartMetadata() {\n    dispatch({\n      type: \"CLEAR_CART_META\"\n    });\n  };\n  var setCartMetadata = function setCartMetadata(metadata) {\n    if (!metadata) return;\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata\n    });\n  };\n  var updateCartMetadata = function updateCartMetadata(metadata) {\n    if (!metadata) return;\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata\n    });\n  };\n  return createElement(CartContext.Provider, {\n    value: _extends({}, state, {\n      getItem: getItem,\n      inCart: inCart,\n      setItems: setItems,\n      addItem: addItem,\n      updateItem: updateItem,\n      updateItemQuantity: updateItemQuantity,\n      removeItem: removeItem,\n      emptyCart: emptyCart,\n      clearCartMetadata: clearCartMetadata,\n      setCartMetadata: setCartMetadata,\n      updateCartMetadata: updateCartMetadata\n    })\n  }, children);\n};\nexport { CartProvider, createCartIdentifier, initialState, useCart };","map":{"version":3,"sources":["../src/useLocalStorage.ts","../src/index.tsx"],"names":["useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","error","setValue","value","valueToStore","Function","setItem","console","log","initialState","items","isEmpty","totalItems","totalUniqueItems","cartTotal","metadata","CartContext","React","createCartIdentifier","len","Array","map","Math","random","toString","join","useCart","context","Error","reducer","state","action","type","generateCartState","payload","id","filter","i","calculateUniqueItems","calculateItemTotals","calculateTotalItems","calculateTotal","itemTotal","price","quantity","reduce","total","sum","length","CartProvider","children","cartId","defaultItems","onSetItems","onItemAdd","onItemUpdate","onItemRemove","storage","savedCart","saveCart","stringify","dispatch","JSON","parse","setItems","addItem","currentItem","find","hasOwnProperty","updateItem","updateItemQuantity","removeItem","emptyCart","inCart","some","clearCartMetadata","setCartMetadata","updateCartMetadata","Provider"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string\n): [string, (value: Function | string) => void] {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item =\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\n\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: Function | string) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import * as React from \"react\";\n\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport interface Item {\n  id: string;\n  price: number;\n  quantity?: number;\n  itemTotal?: number;\n  [key: string]: any;\n}\n\ninterface InitialState {\n  id: string;\n  items: Item[];\n  isEmpty: boolean;\n  totalItems: number;\n  totalUniqueItems: number;\n  cartTotal: number;\n  metadata?: Metadata;\n}\n\nexport interface Metadata {\n  [key: string]: any;\n}\n\ninterface CartProviderState extends InitialState {\n  addItem: (item: Item, quantity?: number) => void;\n  removeItem: (id: Item[\"id\"]) => void;\n  updateItem: (id: Item[\"id\"], payload: object) => void;\n  setItems: (items: Item[]) => void;\n  updateItemQuantity: (id: Item[\"id\"], quantity: number) => void;\n  emptyCart: () => void;\n  getItem: (id: Item[\"id\"]) => any | undefined;\n  inCart: (id: Item[\"id\"]) => boolean;\n  clearCartMetadata: () => void;\n  setCartMetadata: (metadata: Metadata) => void;\n  updateCartMetadata: (metadata: Metadata) => void;\n}\n\nexport type Actions =\n  | { type: \"SET_ITEMS\"; payload: Item[] }\n  | { type: \"ADD_ITEM\"; payload: Item }\n  | { type: \"REMOVE_ITEM\"; id: Item[\"id\"] }\n  | {\n      type: \"UPDATE_ITEM\";\n      id: Item[\"id\"];\n      payload: object;\n    }\n  | { type: \"EMPTY_CART\" }\n  | { type: \"CLEAR_CART_META\" }\n  | { type: \"SET_CART_META\"; payload: Metadata }\n  | { type: \"UPDATE_CART_META\"; payload: Metadata };\n\nexport const initialState: any = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {},\n};\n\nconst CartContext = React.createContext<CartProviderState | undefined>(\n  initialState\n);\n\nexport const createCartIdentifier = (len = 12) =>\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\n\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n\n  return context;\n};\n\nfunction reducer(state: CartProviderState, action: Actions) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\": {\n      const items = [...state.items, action.payload];\n\n      return generateCartState(state, items);\n    }\n\n    case \"UPDATE_ITEM\": {\n      const items = state.items.map((item: Item) => {\n        if (item.id !== action.id) return item;\n\n        return {\n          ...item,\n          ...action.payload,\n        };\n      });\n\n      return generateCartState(state, items);\n    }\n\n    case \"REMOVE_ITEM\": {\n      const items = state.items.filter((i: Item) => i.id !== action.id);\n\n      return generateCartState(state, items);\n    }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return {\n        ...state,\n        metadata: {},\n      };\n\n    case \"SET_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...action.payload,\n        },\n      };\n\n    case \"UPDATE_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...state.metadata,\n          ...action.payload,\n        },\n      };\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nconst generateCartState = (state = initialState, items: Item[]) => {\n  const totalUniqueItems = calculateUniqueItems(items);\n  const isEmpty = totalUniqueItems === 0;\n\n  return {\n    ...initialState,\n    ...state,\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty,\n  };\n};\n\nconst calculateItemTotals = (items: Item[]) =>\n  items.map(item => ({\n    ...item,\n    itemTotal: item.price * item.quantity!,\n  }));\n\nconst calculateTotal = (items: Item[]) =>\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\n\nconst calculateTotalItems = (items: Item[]) =>\n  items.reduce((sum, item) => sum + item.quantity!, 0);\n\nconst calculateUniqueItems = (items: Item[]) => items.length;\n\nexport const CartProvider: React.FC<{\n  children?: React.ReactNode;\n  id?: string;\n  defaultItems?: Item[];\n  onSetItems?: (items: Item[]) => void;\n  onItemAdd?: (payload: Item) => void;\n  onItemUpdate?: (payload: object) => void;\n  onItemRemove?: (id: Item[\"id\"]) => void;\n  storage?: (\n    key: string,\n    initialValue: string\n  ) => [string, (value: Function | string) => void];\n  metadata?: Metadata;\n}> = ({\n  children,\n  id: cartId,\n  defaultItems = [],\n  onSetItems,\n  onItemAdd,\n  onItemUpdate,\n  onItemRemove,\n  storage = useLocalStorage,\n  metadata,\n}) => {\n  const id = cartId ? cartId : createCartIdentifier();\n\n  const [savedCart, saveCart] = storage(\n    cartId ? `react-use-cart-${id}` : `react-use-cart`,\n    JSON.stringify({\n      id,\n      ...initialState,\n      items: defaultItems,\n      metadata,\n    })\n  );\n\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedCart));\n  React.useEffect(() => {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  const setItems = (items: Item[]) => {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(item => ({\n        ...item,\n        quantity: item.quantity || 1,\n      })),\n    });\n\n    onSetItems && onSetItems(items);\n  };\n\n  const addItem = (item: Item, quantity = 1) => {\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\n    if (quantity <= 0) return;\n\n    const currentItem = state.items.find((i: Item) => i.id === item.id);\n\n    if (!currentItem && !item.hasOwnProperty(\"price\"))\n      throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      const payload = { ...item, quantity };\n\n      dispatch({ type: \"ADD_ITEM\", payload });\n\n      onItemAdd && onItemAdd(payload);\n\n      return;\n    }\n\n    const payload = { ...item, quantity: currentItem.quantity + quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: item.id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItem = (id: Item[\"id\"], payload: object) => {\n    if (!id || !payload) {\n      return;\n    }\n\n    dispatch({ type: \"UPDATE_ITEM\", id, payload });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItemQuantity = (id: Item[\"id\"], quantity: number) => {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(id);\n\n      dispatch({ type: \"REMOVE_ITEM\", id });\n\n      return;\n    }\n\n    const currentItem = state.items.find((item: Item) => item.id === id);\n\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    const payload = { ...currentItem, quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const removeItem = (id: Item[\"id\"]) => {\n    if (!id) return;\n\n    dispatch({ type: \"REMOVE_ITEM\", id });\n\n    onItemRemove && onItemRemove(id);\n  };\n\n  const emptyCart = () =>\n    dispatch({\n      type: \"EMPTY_CART\",\n    });\n\n  const getItem = (id: Item[\"id\"]) =>\n    state.items.find((i: Item) => i.id === id);\n\n  const inCart = (id: Item[\"id\"]) => state.items.some((i: Item) => i.id === id);\n\n  const clearCartMetadata = () => {\n    dispatch({\n      type: \"CLEAR_CART_META\",\n    });\n  };\n\n  const setCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  const updateCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        getItem,\n        inCart,\n        setItems,\n        addItem,\n        updateItem,\n        updateItemQuantity,\n        removeItem,\n        emptyCart,\n        clearCartMetadata,\n        setCartMetadata,\n        updateCartMetadata,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}