{"ast":null,"code":"var _jsxFileName = \"D:\\\\D\\u1EF1 \\xC1n T\\u1ED1t Nghi\\u1EC7p\\\\duantotnghiep_test\\\\frontend\\\\src\\\\context\\\\category\\\\CategoryState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CategoryContext from './categoryContext';\nimport axios from 'axios'; // Function for cleaning null, undefined and empty strings values in objects\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction clean(obj) {\n  for (var propName in obj) {\n    if (obj[propName] === null || obj[propName] === undefined || obj[propName] === '') {\n      delete obj[propName];\n    }\n  }\n\n  return obj;\n} // ------------------------------------------\n// Category State\n// ------------------------------------------\n\n\nconst CategoryState = props => {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  const [categoriesError, setCategoriesError] = useState(null);\n  const [categoriesLoading, setCategoriesLoading] = useState(false);\n  const [categoriesMessage, setCategoriesMessage] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      setCategoriesError(null);\n      setCategoriesMessage(null);\n    }, 3000);\n  }, [categoriesError, categoriesMessage]); // Error Handler function\n\n  const errorHandler = (err, info) => {\n    if (err.response) {\n      setCategoriesError({\n        variant: 'danger',\n        message: `${info}, ${err.response.data.error}`\n      });\n    } else if (err.request) {\n      setCategoriesError({\n        variant: 'danger',\n        message: `${info},  Không có phản hồi từ máy chủ!`\n      });\n    } else {\n      setCategoriesError({\n        variant: 'danger',\n        message: err.message\n      });\n    }\n\n    setCategoriesLoading(false);\n  }; // Add new category\n\n\n  const addCategory = async title => {\n    const categoryBody = clean({\n      title\n    });\n    console.log(categoryBody, ' categoryBody');\n\n    try {\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      setCategoriesLoading(true);\n      await axios.post('api/category/add', categoryBody, {\n        headers\n      }); // setCategories([...categories, categoryBody])\n\n      setCategoriesMessage({\n        variant: 'success',\n        message: 'Danh mục được thêm thành công!'\n      });\n      window.location.reload();\n      setCategoriesLoading(false);\n      setCategoriesError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // get all categories\n\n\n  const getCategories = async () => {\n    try {\n      setCategoriesLoading(true);\n      const {\n        data\n      } = await axios.get('api/category/getAll');\n      setCategories(data.categories);\n      setCategoriesLoading(false);\n      setCategoriesError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  }; // Delete Category\n\n\n  const deleteCategory = async id => {\n    try {\n      setCategoriesLoading(true);\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`,\n        'Content-Type': 'multipart/form-data'\n      };\n      const {\n        data\n      } = await axios.delete(`/api/category/${id}`, {\n        headers\n      });\n      setCategoriesMessage({\n        variant: 'success',\n        message: 'Xóa thành công!'\n      });\n      window.location.reload();\n      setCategoriesLoading(false);\n      setCategoriesError(null);\n      return data.categories;\n    } catch (err) {\n      errorHandler(err, 'Không tìm thấy sản phẩm');\n    }\n  }; // get one category\n\n\n  const getOneCategory = async id => {\n    try {\n      const {\n        data\n      } = await axios.get(`/api/category/${id}`);\n      return data.categories;\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  const updateCategory = async (id, title) => {\n    try {\n      const userToken = JSON.parse(localStorage.getItem('userToken'));\n      const headers = {\n        Authorization: `Bearer ${userToken && userToken}`\n      };\n      setCategoriesLoading(true);\n      await axios.patch(`api/category/${id}`, {\n        title\n      }, {\n        headers\n      });\n      getCategories();\n      setCategoriesMessage({\n        variant: 'info',\n        message: 'Danh mục được cập nhật!'\n      });\n      setCategoriesLoading(false);\n      setCategoriesError(null);\n    } catch (err) {\n      errorHandler(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CategoryContext.Provider, {\n    value: {\n      categories,\n      categoriesError,\n      categoriesLoading,\n      categoriesMessage,\n      getCategories,\n      addCategory,\n      deleteCategory,\n      getOneCategory,\n      updateCategory\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoryState, \"ZykizdYdXVIJyL3IGfjgGVDxnSs=\");\n\n_c = CategoryState;\nexport default CategoryState;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryState\");","map":{"version":3,"sources":["D:/Dự Án Tốt Nghiệp/duantotnghiep_test/frontend/src/context/category/CategoryState.js"],"names":["React","useEffect","useState","CategoryContext","axios","clean","obj","propName","undefined","CategoryState","props","categories","setCategories","categoriesError","setCategoriesError","categoriesLoading","setCategoriesLoading","categoriesMessage","setCategoriesMessage","setTimeout","errorHandler","err","info","response","variant","message","data","error","request","addCategory","title","categoryBody","console","log","userToken","JSON","parse","localStorage","getItem","headers","Authorization","post","window","location","reload","getCategories","get","deleteCategory","id","delete","getOneCategory","updateCategory","patch","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport CategoryContext from './categoryContext'\r\nimport axios from 'axios'\r\n\r\n// Function for cleaning null, undefined and empty strings values in objects\r\nfunction clean(obj) {\r\n  for (var propName in obj) {\r\n    if (\r\n      obj[propName] === null ||\r\n      obj[propName] === undefined ||\r\n      obj[propName] === ''\r\n    ) {\r\n      delete obj[propName]\r\n    }\r\n  }\r\n  return obj\r\n}\r\n\r\n// ------------------------------------------\r\n// Category State\r\n// ------------------------------------------\r\nconst CategoryState = props => {\r\n  const [categories, setCategories] = useState([])\r\n  const [categoriesError, setCategoriesError] = useState(null)\r\n  const [categoriesLoading, setCategoriesLoading] = useState(false)\r\n  const [categoriesMessage, setCategoriesMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setCategoriesError(null)\r\n      setCategoriesMessage(null)\r\n    }, 3000)\r\n  }, [categoriesError, categoriesMessage])\r\n\r\n  // Error Handler function\r\n  const errorHandler = (err, info) => {\r\n    if (err.response) {\r\n      setCategoriesError({\r\n        variant: 'danger',\r\n        message: `${info}, ${err.response.data.error}`,\r\n      })\r\n    } else if (err.request) {\r\n      setCategoriesError({\r\n        variant: 'danger',\r\n        message: `${info},  Không có phản hồi từ máy chủ!`,\r\n      })\r\n    } else {\r\n      setCategoriesError({ variant: 'danger', message: err.message })\r\n    }\r\n    setCategoriesLoading(false)\r\n  }\r\n\r\n  // Add new category\r\n  const addCategory = async title => {\r\n    const categoryBody = clean({ title })\r\n    console.log(categoryBody, ' categoryBody')\r\n    try {\r\n      const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      }\r\n      setCategoriesLoading(true)\r\n      await axios.post('api/category/add', categoryBody, { headers })\r\n      // setCategories([...categories, categoryBody])\r\n      setCategoriesMessage({\r\n        variant: 'success',\r\n        message: 'Danh mục được thêm thành công!',\r\n      })\r\n      window.location.reload()\r\n      setCategoriesLoading(false)\r\n      setCategoriesError(null)\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  // get all categories\r\n  const getCategories = async () => {\r\n    try {\r\n      setCategoriesLoading(true)\r\n      const { data } = await axios.get('api/category/getAll')\r\n      setCategories(data.categories)\r\n      setCategoriesLoading(false)\r\n      setCategoriesError(null)\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n  \r\n// Delete Category\r\nconst deleteCategory = async id  => {\r\n  try {\r\n    setCategoriesLoading(true)\r\n    const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n    const headers = {\r\n      Authorization: `Bearer ${userToken && userToken}`,\r\n      'Content-Type': 'multipart/form-data',\r\n    }\r\n    const { data } = await axios.delete(`/api/category/${id}`, { headers })\r\n    setCategoriesMessage({\r\n      variant: 'success',\r\n      message: 'Xóa thành công!',\r\n    })\r\n    window.location.reload();\r\n    setCategoriesLoading(false)\r\n    setCategoriesError(null)\r\n    return data.categories\r\n  } catch (err) {\r\n    errorHandler(err, 'Không tìm thấy sản phẩm')\r\n  }\r\n}\r\n\r\n  // get one category\r\n  const getOneCategory = async id => {\r\n    try {\r\n      const { data } = await axios.get(`/api/category/${id}`)\r\n      return data.categories\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  const updateCategory = async (id, title) => {\r\n    try {\r\n      const userToken = JSON.parse(localStorage.getItem('userToken'))\r\n      const headers = {\r\n        Authorization: `Bearer ${userToken && userToken}`,\r\n      }\r\n      setCategoriesLoading(true)\r\n      await axios.patch(`api/category/${id}`, { title }, { headers })\r\n      getCategories()\r\n      setCategoriesMessage({\r\n        variant: 'info',\r\n        message: 'Danh mục được cập nhật!',\r\n      })\r\n      setCategoriesLoading(false)\r\n      setCategoriesError(null)\r\n    } catch (err) {\r\n      errorHandler(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CategoryContext.Provider\r\n      value={{\r\n        categories,\r\n        categoriesError,\r\n        categoriesLoading,\r\n        categoriesMessage,\r\n        getCategories,\r\n        addCategory,\r\n        deleteCategory,\r\n        getOneCategory,\r\n        updateCategory,\r\n      }}>\r\n      {props.children}\r\n    </CategoryContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CategoryState\r\n"]},"metadata":{},"sourceType":"module"}