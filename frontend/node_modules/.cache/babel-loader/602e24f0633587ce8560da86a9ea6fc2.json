{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport Portal from '@rc-component/portal';\nimport DrawerPopup from './DrawerPopup';\nimport { warnCheck } from './util';\n\nvar Drawer = function Drawer(props) {\n  var open = props.open,\n      getContainer = props.getContainer,\n      forceRender = props.forceRender,\n      prefixCls = props.prefixCls,\n      afterOpenChange = props.afterOpenChange,\n      destroyOnClose = props.destroyOnClose,\n      mask = props.mask;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      animatedVisible = _React$useState2[0],\n      setAnimatedVisible = _React$useState2[1]; // ============================= Warn =============================\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    warnCheck(props);\n  } // ============================= Open =============================\n\n\n  var internalAfterOpenChange = function internalAfterOpenChange(nextVisible) {\n    setAnimatedVisible(nextVisible);\n    afterOpenChange === null || afterOpenChange === void 0 ? void 0 : afterOpenChange(nextVisible);\n  }; // ============================ Render ============================\n\n\n  if (!forceRender && !animatedVisible && !open && destroyOnClose) {\n    return null;\n  }\n\n  var sharedDrawerProps = _objectSpread(_objectSpread({}, props), {}, {\n    prefixCls: prefixCls,\n    afterOpenChange: internalAfterOpenChange\n  });\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    open: open || forceRender || animatedVisible,\n    autoDestroy: false,\n    getContainer: getContainer,\n    autoLock: mask && (open || animatedVisible)\n  }, /*#__PURE__*/React.createElement(DrawerPopup, _extends({}, sharedDrawerProps, {\n    inline: getContainer === false\n  })));\n}; // Default Value.\n// Since spread with default value will make this all over components.\n// Let's maintain this in one place.\n\n\nDrawer.defaultProps = {\n  open: false,\n  prefixCls: 'rc-drawer',\n  placement: 'right',\n  autoFocus: true,\n  keyboard: true,\n  width: 378,\n  mask: true,\n  maskClosable: true\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Drawer.displayName = 'Drawer';\n}\n\nexport default Drawer;","map":{"version":3,"sources":["D:/Dự Án Tốt Nghiệp/duantotnghiep_test/frontend/node_modules/rc-drawer/es/Drawer.js"],"names":["_extends","_objectSpread","_slicedToArray","React","Portal","DrawerPopup","warnCheck","Drawer","props","open","getContainer","forceRender","prefixCls","afterOpenChange","destroyOnClose","mask","_React$useState","useState","_React$useState2","animatedVisible","setAnimatedVisible","process","env","NODE_ENV","internalAfterOpenChange","nextVisible","sharedDrawerProps","createElement","autoDestroy","autoLock","inline","defaultProps","placement","autoFocus","keyboard","width","maskClosable","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport Portal from '@rc-component/portal';\nimport DrawerPopup from './DrawerPopup';\nimport { warnCheck } from './util';\nvar Drawer = function Drawer(props) {\n  var open = props.open,\n    getContainer = props.getContainer,\n    forceRender = props.forceRender,\n    prefixCls = props.prefixCls,\n    afterOpenChange = props.afterOpenChange,\n    destroyOnClose = props.destroyOnClose,\n    mask = props.mask;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    animatedVisible = _React$useState2[0],\n    setAnimatedVisible = _React$useState2[1];\n  // ============================= Warn =============================\n  if (process.env.NODE_ENV !== 'production') {\n    warnCheck(props);\n  }\n  // ============================= Open =============================\n  var internalAfterOpenChange = function internalAfterOpenChange(nextVisible) {\n    setAnimatedVisible(nextVisible);\n    afterOpenChange === null || afterOpenChange === void 0 ? void 0 : afterOpenChange(nextVisible);\n  };\n  // ============================ Render ============================\n  if (!forceRender && !animatedVisible && !open && destroyOnClose) {\n    return null;\n  }\n  var sharedDrawerProps = _objectSpread(_objectSpread({}, props), {}, {\n    prefixCls: prefixCls,\n    afterOpenChange: internalAfterOpenChange\n  });\n  return /*#__PURE__*/React.createElement(Portal, {\n    open: open || forceRender || animatedVisible,\n    autoDestroy: false,\n    getContainer: getContainer,\n    autoLock: mask && (open || animatedVisible)\n  }, /*#__PURE__*/React.createElement(DrawerPopup, _extends({}, sharedDrawerProps, {\n    inline: getContainer === false\n  })));\n};\n// Default Value.\n// Since spread with default value will make this all over components.\n// Let's maintain this in one place.\nDrawer.defaultProps = {\n  open: false,\n  prefixCls: 'rc-drawer',\n  placement: 'right',\n  autoFocus: true,\n  keyboard: true,\n  width: 378,\n  mask: true,\n  maskClosable: true\n};\nif (process.env.NODE_ENV !== 'production') {\n  Drawer.displayName = 'Drawer';\n}\nexport default Drawer;"]},"metadata":{},"sourceType":"module"}