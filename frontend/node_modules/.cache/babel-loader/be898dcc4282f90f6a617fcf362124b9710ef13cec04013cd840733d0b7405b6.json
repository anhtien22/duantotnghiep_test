{"ast":null,"code":"import { isPresent } from './misc';\nimport { parseColor } from '@progress/kendo-drawing';\n/**\n * @hidden\n */\nvar ColorPaletteService = /** @class */function () {\n  function ColorPaletteService() {\n    this.colorRows = [];\n  }\n  ColorPaletteService.prototype.setColorMatrix = function (palette, columns) {\n    this.colorRows = [];\n    if (!(isPresent(palette) && palette.length)) {\n      return;\n    }\n    columns = columns || palette.length;\n    for (var start = 0; start < palette.length; start += columns) {\n      var row = palette.slice(start, columns + start);\n      this.colorRows.push(row);\n    }\n  };\n  ColorPaletteService.prototype.getCellCoordsFor = function (color) {\n    var _this = this;\n    if (!isPresent(color)) {\n      return;\n    }\n    var parsedColor = color ? parseColor(color, true) : color;\n    var colors = [color];\n    if (isPresent(parsedColor)) {\n      colors.push(parsedColor.toCss(), parsedColor.toCssRgba());\n    }\n    var _loop_1 = function _loop_1(row) {\n      var _loop_2 = function _loop_2(col) {\n        if (colors.some(function (c) {\n          return c === _this.colorRows[row][col];\n        })) {\n          return {\n            value: {\n              row: row,\n              col: col\n            }\n          };\n        }\n      };\n      for (var col = 0; col < this_1.colorRows[row].length; col++) {\n        var state_2 = _loop_2(col);\n        if (typeof state_2 === \"object\") return state_2;\n      }\n    };\n    var this_1 = this;\n    for (var row = 0; row < this.colorRows.length; row++) {\n      var state_1 = _loop_1(row);\n      if (typeof state_1 === \"object\") return state_1.value;\n    }\n  };\n  ColorPaletteService.prototype.getColorAt = function (cellCoords) {\n    if (!(isPresent(cellCoords) && isPresent(this.colorRows[cellCoords.row]))) {\n      return;\n    }\n    return this.colorRows[cellCoords.row][cellCoords.col];\n  };\n  ColorPaletteService.prototype.getNextCell = function (current, horizontalStep, verticalStep) {\n    if (!(isPresent(current) && isPresent(current.row) && isPresent(current.col))) {\n      return {\n        row: 0,\n        col: 0\n      };\n    }\n    var row = this.clampIndex(current.row + verticalStep, this.colorRows.length - 1);\n    var col = this.clampIndex(current.col + horizontalStep, this.colorRows[row].length - 1);\n    return {\n      row: row,\n      col: col\n    };\n  };\n  ColorPaletteService.prototype.clampIndex = function (index, max) {\n    var minArrayIndex = 0;\n    if (index < minArrayIndex) {\n      return minArrayIndex;\n    }\n    if (index > max) {\n      return max;\n    }\n    return index;\n  };\n  return ColorPaletteService;\n}();\nexport { ColorPaletteService };","map":{"version":3,"names":["isPresent","parseColor","ColorPaletteService","colorRows","prototype","setColorMatrix","palette","columns","length","start","row","slice","push","getCellCoordsFor","color","_this","parsedColor","colors","toCss","toCssRgba","_loop_1","_loop_2","col","some","c","value","this_1","state_2","state_1","getColorAt","cellCoords","getNextCell","current","horizontalStep","verticalStep","clampIndex","index","max","minArrayIndex"],"sources":["D:/Dự Án Tốt Nghiệp/duantotnghiep_test/frontend/node_modules/@progress/kendo-react-inputs/dist/es/colors/utils/color-palette.service.js"],"sourcesContent":["import { isPresent } from './misc';\nimport { parseColor } from '@progress/kendo-drawing';\n/**\n * @hidden\n */\nvar ColorPaletteService = /** @class */ (function () {\n    function ColorPaletteService() {\n        this.colorRows = [];\n    }\n    ColorPaletteService.prototype.setColorMatrix = function (palette, columns) {\n        this.colorRows = [];\n        if (!(isPresent(palette) && palette.length)) {\n            return;\n        }\n        columns = columns || palette.length;\n        for (var start = 0; start < palette.length; start += columns) {\n            var row = palette.slice(start, columns + start);\n            this.colorRows.push(row);\n        }\n    };\n    ColorPaletteService.prototype.getCellCoordsFor = function (color) {\n        var _this = this;\n        if (!isPresent(color)) {\n            return;\n        }\n        var parsedColor = color ? parseColor(color, true) : color;\n        var colors = [color];\n        if (isPresent(parsedColor)) {\n            colors.push(parsedColor.toCss(), parsedColor.toCssRgba());\n        }\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                if (colors.some(function (c) { return c === _this.colorRows[row][col]; })) {\n                    return { value: { row: row, col: col } };\n                }\n            };\n            for (var col = 0; col < this_1.colorRows[row].length; col++) {\n                var state_2 = _loop_2(col);\n                if (typeof state_2 === \"object\")\n                    return state_2;\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row < this.colorRows.length; row++) {\n            var state_1 = _loop_1(row);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n    };\n    ColorPaletteService.prototype.getColorAt = function (cellCoords) {\n        if (!(isPresent(cellCoords) && isPresent(this.colorRows[cellCoords.row]))) {\n            return;\n        }\n        return this.colorRows[cellCoords.row][cellCoords.col];\n    };\n    ColorPaletteService.prototype.getNextCell = function (current, horizontalStep, verticalStep) {\n        if (!(isPresent(current) && isPresent(current.row) && isPresent(current.col))) {\n            return { row: 0, col: 0 };\n        }\n        var row = this.clampIndex(current.row + verticalStep, this.colorRows.length - 1);\n        var col = this.clampIndex(current.col + horizontalStep, this.colorRows[row].length - 1);\n        return { row: row, col: col };\n    };\n    ColorPaletteService.prototype.clampIndex = function (index, max) {\n        var minArrayIndex = 0;\n        if (index < minArrayIndex) {\n            return minArrayIndex;\n        }\n        if (index > max) {\n            return max;\n        }\n        return index;\n    };\n    return ColorPaletteService;\n}());\nexport { ColorPaletteService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}